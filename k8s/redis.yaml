apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: web
data:
  redis.conf: |
    dir /data
    appendonly yes
    protected-mode no
    requirepass ""
    maxmemory 200mb
    maxmemory-policy allkeys-lru
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: web
  labels:
    app: redis
spec:
  serviceName: redis-headless
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: config
        image: busybox:1.36
        command: ["/bin/sh", "-c"]
        args:
        - |
          cp /readonly-config/redis.conf /redis-config/
          if [ "$(hostname)" = "redis-0" ]; then
            echo "# Master node" >> /redis-config/redis.conf
          else
            echo "# Slave node" >> /redis-config/redis.conf
            echo "slaveof redis-0.redis-headless 6379" >> /redis-config/redis.conf
          fi
        volumeMounts:
        - name: config
          mountPath: /readonly-config
        - name: config-dir
          mountPath: /redis-config
      containers:
      - name: redis
        image: redis:7.0-alpine
        command: ["redis-server"]
        args: ["/redis-config/redis.conf"]
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config-dir
          mountPath: /redis-config
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: redis-config
      - name: config-dir
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentinel-config
  namespace: web
data:
  sentinel.conf: |
    port 26379
    dir /tmp
    sentinel monitor mymaster redis-headless 6379 2
    sentinel down-after-milliseconds mymaster 5000
    sentinel failover-timeout mymaster 60000
    sentinel parallel-syncs mymaster 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: web
  labels:
    app: redis-sentinel
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
      - name: sentinel
        image: redis:7.0-alpine
        command:
          - sh
          - -c
          - |
            cp /config/sentinel.conf /tmp/sentinel.conf
            redis-sentinel /tmp/sentinel.conf
        ports:
        - containerPort: 26379
          name: sentinel
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: sentinel-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: web
  labels:
    app: redis
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: web
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel
  namespace: web
  labels:
    app: redis-sentinel
spec:
  selector:
    app: redis-sentinel
  ports:
  - port: 26379
    targetPort: 26379
  type: ClusterIP