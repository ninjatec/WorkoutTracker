@page "{id?}"
@model WorkoutTrackerWeb.Pages.BackgroundJobs.DetailsModel
@{
    ViewData["Title"] = "Job Details";
    // For checking job state
    var isSucceeded = Model.Job?.History.Any(h => h.StateName == "Succeeded") ?? false;
    var isFailed = Model.Job?.History.Any(h => h.StateName == "Failed") ?? false;
}

<div class="container">
    <h1>Job Details</h1>
    <p class="lead">Detailed information about job #@Model.JobId</p>
    
    @if (Model.Job == null)
    {
        <div class="alert alert-danger">
            <h4>Job Not Found</h4>
            <p>The requested job was not found in the system. It may have been deleted or expired.</p>
            <a asp-page="./JobHistory" class="btn btn-secondary">Back to Job History</a>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Job Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <tr>
                                    <th style="width: 200px;">Job ID</th>
                                    <td><code>@Model.JobId</code></td>
                                </tr>
                                <tr>
                                    <th>Current State</th>
                                    <td>
                                        @{
                                            string stateClass = "secondary";
                                            if (Model.CurrentState == "Succeeded") { stateClass = "success"; }
                                            else if (Model.CurrentState == "Failed") { stateClass = "danger"; }
                                            else if (Model.CurrentState == "Processing") { stateClass = "primary"; }
                                            else if (Model.CurrentState == "Scheduled") { stateClass = "info"; }
                                        }
                                        <span class="badge bg-@stateClass">@Model.CurrentState</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Method</th>
                                    <td>
                                        <strong>@Model.Job.Job.Type.Name</strong>.<span class="text-primary">@Model.Job.Job.Method.Name</span>()
                                    </td>
                                </tr>
                                <tr>
                                    <th>Created At</th>
                                    <td>
                                        @(Model.Job.CreatedAt != null ? ((DateTime)Model.Job.CreatedAt).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss") : "N/A")
                                    </td>
                                </tr>
                                @if (Model.CurrentState == "Succeeded" && isSucceeded)
                                {
                                    var succeededState = Model.History.FirstOrDefault(h => h.StateName == "Succeeded");
                                    <tr>
                                        <th>Completed At</th>
                                        <td>
                                            @(succeededState?.CreatedAt != null ? ((DateTime)succeededState.CreatedAt).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss") : "N/A")
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Total Duration</th>
                                        <td>
                                            @{
                                                var startTime = Model.Job.CreatedAt;
                                                var endTime = succeededState?.CreatedAt;
                                                
                                                if (startTime != null && endTime != null)
                                                {
                                                    var duration = (DateTime)endTime - (DateTime)startTime;
                                                    @(duration.TotalSeconds < 1 
                                                      ? $"{duration.TotalMilliseconds:0.0} ms"
                                                      : (duration.TotalMinutes < 1
                                                        ? $"{duration.TotalSeconds:0.00} seconds"
                                                        : $"{duration.TotalMinutes:0.00} minutes"))
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Unknown duration</span>
                                                }
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Result</th>
                                        <td>
                                            @if (Model.JobResult != null)
                                            {
                                                <pre class="bg-light p-2">@Model.JobResult</pre>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No result data</span>
                                            }
                                        </td>
                                    </tr>
                                }
                                @if (Model.CurrentState == "Failed" && isFailed)
                                {
                                    var failedState = Model.History.FirstOrDefault(h => h.StateName == "Failed");
                                    
                                    <tr>
                                        <th>Failed At</th>
                                        <td>
                                            @(failedState?.CreatedAt != null ? ((DateTime)failedState.CreatedAt).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss") : "N/A")
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Exception</th>
                                        <td class="text-danger">
                                            @if (Model.Job.Properties.TryGetValue("ExceptionType", out var exType) &&
                                                 Model.Job.Properties.TryGetValue("ExceptionMessage", out var exMessage))
                                            {
                                                @exType 
                                                <text>: </text>
                                                @exMessage
                                            }
                                            else
                                            {
                                                <span>Unknown error</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Exception Details</th>
                                        <td>
                                            @if (Model.Job.Properties.TryGetValue("ExceptionDetails", out var exDetails))
                                            {
                                                <pre class="text-danger p-2" style="max-height: 400px; overflow-y: auto;">@exDetails</pre>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No exception details available</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Arguments</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Job.Job.Args != null && Model.Job.Job.Args.Count > 0)
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th style="width: 50px;">Index</th>
                                            <th>Type</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Job.Job.Args.Count; i++)
                                        {
                                            var arg = Model.Job.Job.Args[i];
                                            <tr>
                                                <td>@i</td>
                                                <td>
                                                    @if (arg != null)
                                                    {
                                                        <code>@arg.GetType().Name</code>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">null</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (arg != null)
                                                    {
                                                        <pre class="bg-light p-2 mb-0">@arg</pre>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">null</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-light">
                                This job was called without any arguments.
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">History</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.History != null && Model.History.Count > 0)
                        {
                            <ul class="list-group">
                                @foreach (var entry in Model.History)
                                {
                                    string itemClass = "";
                                    string icon = "info-circle";
                                    
                                    switch (entry.StateName.ToLower())
                                    {
                                        case "succeeded":
                                            itemClass = "list-group-item-success";
                                            icon = "check-circle";
                                            break;
                                        case "failed":
                                            itemClass = "list-group-item-danger";
                                            icon = "times-circle";
                                            break;
                                        case "processing":
                                            itemClass = "list-group-item-primary";
                                            icon = "spinner";
                                            break;
                                        case "scheduled":
                                            itemClass = "list-group-item-info";
                                            icon = "clock";
                                            break;
                                        case "enqueued":
                                            itemClass = "list-group-item-secondary";
                                            icon = "list";
                                            break;
                                    }
                                    
                                    <li class="list-group-item @itemClass">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-1">
                                                <i class="fas fa-@icon"></i> @entry.StateName
                                            </h6>
                                            <small>
                                                @(entry.CreatedAt != null ? ((DateTime)entry.CreatedAt).ToLocalTime().ToString("HH:mm:ss") : "Unknown")
                                            </small>
                                        </div>
                                        <p class="mb-1">
                                            <small>@entry.Reason</small>
                                        </p>
                                        <small>
                                            @(entry.CreatedAt != null ? ((DateTime)entry.CreatedAt).ToLocalTime().ToString("yyyy-MM-dd") : "Unknown")
                                        </small>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="alert alert-light">
                                No history available for this job.
                            </div>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            @if (Model.CurrentState == "Failed")
                            {
                                <a asp-page="./Details" asp-page-handler="Retry" asp-route-id="@Model.JobId" class="btn btn-warning">
                                    <i class="fas fa-redo"></i> Retry Job
                                </a>
                            }
                            <a asp-page="./Details" asp-page-handler="Delete" asp-route-id="@Model.JobId" 
                               class="btn btn-outline-danger"
                               onclick="return confirm('Are you sure you want to delete this job? This action cannot be undone.');">
                                <i class="fas fa-trash"></i> Delete Job
                            </a>
                            <a asp-page="./JobHistory" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Job History
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}