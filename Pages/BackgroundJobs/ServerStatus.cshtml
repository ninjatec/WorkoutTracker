@page
@model WorkoutTrackerWeb.Pages.BackgroundJobs.ServerStatusModel
@{
    ViewData["Title"] = "Server Status";
}

<div class="container">
    <h1>Server Status</h1>
    <p class="lead">Monitoring information for background job servers and workers</p>
    
    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Active Servers</h5>
                    <button class="btn btn-sm btn-outline-secondary" onclick="location.reload()">
                        <i class="fas fa-sync"></i> Refresh
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.Servers != null && Model.Servers.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="serversTable">
                                <thead>
                                    <tr>
                                        <th>Server ID</th>
                                        <th>Workers</th>
                                        <th>Queues</th>
                                        <th>Started</th>
                                        <th>Heartbeat</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var server in Model.Servers)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@server.Id</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@server.WorkersCount active</span>
                                            </td>
                                            <td>
                                                @string.Join(", ", server.Queues.Select(q => q.Name))
                                            </td>
                                            <td>
                                                @server.StartedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
                                                <br />
                                                <small class="text-muted">
                                                    @{
                                                        var uptime = DateTime.Now - server.StartedAt;
                                                        if (uptime.TotalDays >= 1)
                                                        {
                                                            @($"{(int)uptime.TotalDays}d {uptime.Hours}h {uptime.Minutes}m")
                                                        }
                                                        else if (uptime.TotalHours >= 1)
                                                        {
                                                            @($"{(int)uptime.TotalHours}h {uptime.Minutes}m {uptime.Seconds}s")
                                                        }
                                                        else
                                                        {
                                                            @($"{uptime.Minutes}m {uptime.Seconds}s")
                                                        }
                                                    } ago
                                                </small>
                                            </td>
                                            <td>
                                                @{
                                                    var lastHeartbeat = DateTime.Now - server.Heartbeat ?? TimeSpan.MaxValue;
                                                    string heartbeatClass = lastHeartbeat.TotalSeconds > 30 ? "text-danger" : "text-success";
                                                }
                                                <span class="@heartbeatClass">
                                                    @if (server.Heartbeat.HasValue)
                                                    {
                                                        if (lastHeartbeat.TotalMinutes >= 1)
                                                        {
                                                            @($"{(int)lastHeartbeat.TotalMinutes}m {lastHeartbeat.Seconds}s ago")
                                                        }
                                                        else
                                                        {
                                                            @($"{lastHeartbeat.Seconds}s ago")
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="text-danger">No heartbeat</span>
                                                    }
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle"></i> No active servers found. The background job system may not be running.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Queues</h5>
                </div>
                <div class="card-body">
                    @if (Model.Queues != null && Model.Queues.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="queuesTable">
                                <thead>
                                    <tr>
                                        <th>Queue</th>
                                        <th>Length</th>
                                        <th>State</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var queue in Model.Queues)
                                    {
                                        <tr>
                                            <td>@queue.Name</td>
                                            <td>
                                                <span class="badge bg-@(queue.Length > 0 ? "warning" : "success")">
                                                    @queue.Length
                                                </span>
                                            </td>
                                            <td>
                                                @if (queue.IsPaused)
                                                {
                                                    <span class="badge bg-warning">Paused</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No active queues found.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="mt-4">
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function() {
            // Initialize data tables with minimal options - just paging
            $('#serversTable, #queuesTable').DataTable({
                "paging": true,
                "ordering": true,
                "info": true,
                "pageLength": 10
            });
            
            // Auto-refresh the page every 30 seconds
            setTimeout(function() {
                location.reload();
            }, 30000);
        });
    </script>
}