@page
@model WorkoutTrackerWeb.Pages.Reps.IndexModel

@{
    ViewData["Title"] = "Reps";
}

<h1>Reps</h1>

<p>
    <div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" id="createRepDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            Create New Rep
        </button>
        <ul class="dropdown-menu" aria-labelledby="createRepDropdown">
            @foreach (var set in Model.AvailableSets)
            {
                <li><a class="dropdown-item" asp-page="Create" asp-route-setId="@set.SetId">For @set.ExerciseType.Name (@set.Session.Name)</a></li>
            }
        </ul>
    </div>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SessionSort">Session</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SessionDateTimeSort">Session Date/Time</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ExerciseSort">Exercise Type</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SetTypeSort">Set Type</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.WeightSort">
                    @Html.DisplayNameFor(model => model.Rep[0].weight)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RepNumberSort">
                    @Html.DisplayNameFor(model => model.Rep[0].repnumber)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SuccessSort">
                    @Html.DisplayNameFor(model => model.Rep[0].success)
                </a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Rep) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Sets.Session.Name)
            </td>
            <td>
                @item.Sets.Session.datetime.ToString("dd/MM/yy HH:mm")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sets.ExerciseType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sets.Settype.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.repnumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.success)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.RepId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.RepId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.RepId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        // Add some visual indication of sorted columns
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const sortOrder = urlParams.get('sortOrder');
            if (sortOrder) {
                const headers = document.querySelectorAll('th a');
                headers.forEach(header => {
                    const href = header.getAttribute('href');
                    if (href.includes(sortOrder)) {
                        header.style.fontWeight = 'bold';
                        header.style.color = '#0366d6';
                    }
                });
            }
        });
    </script>
}
