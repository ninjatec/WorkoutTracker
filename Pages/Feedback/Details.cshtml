@page
@model WorkoutTrackerWeb.Pages.Feedback.DetailsModel
@using WorkoutTrackerWeb.Models

@{
    ViewData["Title"] = "Feedback Details";
}

<div class="container">
    <h1>Feedback Details</h1>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">@Model.Feedback.Subject</h5>
            <span class="badge @GetTypeBadgeClass(Model.Feedback.Type)">@Model.Feedback.Type.ToString()</span>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-3">
                    <strong>Submission Date:</strong>
                </div>
                <div class="col-md-9">
                    @Model.Feedback.SubmissionDate.ToString("dd/MM/yyyy HH:mm")
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-3">
                    <strong>Status:</strong>
                </div>
                <div class="col-md-9">
                    <span class="badge @GetStatusBadgeClass(Model.Feedback.Status)">
                        @Model.Feedback.Status.ToString()
                    </span>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Feedback.ContactEmail))
            {
                <div class="row mb-3">
                    <div class="col-md-3">
                        <strong>Contact Email:</strong>
                    </div>
                    <div class="col-md-9">
                        <a href="mailto:@Model.Feedback.ContactEmail">@Model.Feedback.ContactEmail</a>
                    </div>
                </div>
            }

            @if (Model.Feedback.User != null)
            {
                <div class="row mb-3">
                    <div class="col-md-3">
                        <strong>Submitted By:</strong>
                    </div>
                    <div class="col-md-9">
                        @Model.Feedback.User.Name
                    </div>
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-3">
                    <strong>Message:</strong>
                </div>
                <div class="col-md-9">
                    <div class="card">
                        <div class="card-body bg-light">
                            @Html.Raw(Model.Feedback.Message.Replace(Environment.NewLine, "<br />"))
                        </div>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Feedback.AdminNotes))
            {
                <div class="row mb-3">
                    <div class="col-md-3">
                        <strong>Admin Notes:</strong>
                    </div>
                    <div class="col-md-9">
                        <div class="card">
                            <div class="card-body bg-light">
                                @Html.Raw(Model.Feedback.AdminNotes.Replace(Environment.NewLine, "<br />"))
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="mb-3">
        <a asp-page="./Edit" asp-route-id="@Model.Feedback.FeedbackId" class="btn btn-primary">
            <i class="bi bi-pencil"></i> Edit
        </a>
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>
</div>

@functions {
    string GetTypeBadgeClass(FeedbackType type)
    {
        return type switch
        {
            FeedbackType.BugReport => "bg-danger",
            FeedbackType.FeatureRequest => "bg-primary",
            FeedbackType.Question => "bg-info",
            _ => "bg-secondary"
        };
    }

    string GetStatusBadgeClass(FeedbackStatus status)
    {
        return status switch
        {
            FeedbackStatus.New => "bg-warning",
            FeedbackStatus.InProgress => "bg-primary",
            FeedbackStatus.Completed => "bg-success",
            FeedbackStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}