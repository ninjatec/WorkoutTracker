@page
@model WorkoutTrackerWeb.Pages.DataPortability.ExportModel
@{
    ViewData["Title"] = "Export Workout Data";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-6">
        <form method="post" id="exportForm">
            <div class="form-group">
                <label asp-for="StartDate" class="control-label">Start Date</label>
                <input asp-for="StartDate" class="form-control" type="date" />
            </div>

            <div class="form-group mt-3">
                <label asp-for="EndDate" class="control-label">End Date</label>
                <input asp-for="EndDate" class="form-control" type="date" />
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary" id="exportButton">Export to JSON</button>
            </div>
        </form>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert @(Model.Success ? "alert-success" : "alert-danger")" role="alert">
        @Model.Message
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <style>
        .exporting {
            cursor: wait !important;
        }
    </style>

    <script>
        // Get form and button elements
        const form = document.getElementById('exportForm');
        const exportButton = document.getElementById('exportButton');

        // Add form submit handler
        form.addEventListener('submit', function(e) {
            // Add waiting cursor to body
            document.body.classList.add('exporting');
            // Disable the export button
            exportButton.disabled = true;
            exportButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Exporting...';

            // Remove the waiting state after the export completes or fails
            // We'll use a timeout since this is a file download
            setTimeout(function() {
                document.body.classList.remove('exporting');
                exportButton.disabled = false;
                exportButton.innerHTML = 'Export to JSON';
            }, 3000);
        });

        // Check for error message to remove waiting state immediately
        if (document.querySelector('.alert-danger')) {
            document.body.classList.remove('exporting');
            exportButton.disabled = false;
            exportButton.innerHTML = 'Export to JSON';
        }
    </script>
}