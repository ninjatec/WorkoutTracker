@page
@model WorkoutTrackerWeb.Pages.DataPortability.ImportModel
@{
    ViewData["Title"] = "Import Workout Data";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-6">
        <form method="post" enctype="multipart/form-data" id="importForm">
            <div class="form-group">
                <label asp-for="ImportFile" class="control-label">JSON File</label>
                <input asp-for="ImportFile" class="form-control" type="file" accept=".json" />
                <span asp-validation-for="ImportFile" class="text-danger"></span>
            </div>

            <div class="form-check mt-3">
                <input asp-for="SkipExisting" class="form-check-input" type="checkbox" checked />
                <label asp-for="SkipExisting" class="form-check-label">Skip existing sessions</label>
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary" id="importButton">Import</button>
            </div>
        </form>

        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <div class="alert @(Model.Success ? "alert-success" : "alert-danger")" role="alert">
                @Model.Message
            </div>
        }

        @if (Model.Success && Model.ImportedItems.Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    Import Summary
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var item in Model.ImportedItems)
                        {
                            <li class="list-group-item">@item</li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <style>
        .importing {
            cursor: wait !important;
        }
    </style>

    <script>
        // Get form and button elements
        const form = document.getElementById('importForm');
        const importButton = document.getElementById('importButton');

        // Add form submit handler
        form.addEventListener('submit', function(e) {
            // Add waiting cursor to body
            document.body.classList.add('importing');
            // Disable the import button
            importButton.disabled = true;
            importButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Importing...';
        });

        // Check for success message to remove waiting state
        if (document.querySelector('.alert-success')) {
            document.body.classList.remove('importing');
            importButton.disabled = false;
            importButton.innerHTML = 'Import';
        }
    </script>
}