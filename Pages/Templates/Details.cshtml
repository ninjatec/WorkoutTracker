@page "{id:int}"
@model WorkoutTrackerWeb.Pages.Templates.DetailsModel
@{
    ViewData["Title"] = Model.WorkoutTemplate.Name;
}

<div class="container-fluid">
    <div class="mb-3">
        <a asp-page="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Templates
        </a>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h1 class="h3 mb-0">@Model.WorkoutTemplate.Name</h1>
            <span class="badge @(Model.WorkoutTemplate.IsPublic ? "bg-success" : "bg-secondary")">
                @(Model.WorkoutTemplate.IsPublic ? "Public" : "Private")
            </span>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <h5>Description</h5>
                    <p class="mb-4">@Model.WorkoutTemplate.Description</p>

                    <div class="mb-4">
                        <h5>Details</h5>
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Category:</strong> @(string.IsNullOrEmpty(Model.WorkoutTemplate.Category) ? "None" : Model.WorkoutTemplate.Category)</p>
                                <p><strong>Created:</strong> @Model.WorkoutTemplate.CreatedDate.ToString("MMM dd, yyyy")</p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Last Modified:</strong> @Model.WorkoutTemplate.LastModifiedDate.ToString("MMM dd, yyyy")</p>
                                <p>
                                    <strong>Tags:</strong>
                                    @if (string.IsNullOrEmpty(Model.WorkoutTemplate.Tags))
                                    {
                                        <span>None</span>
                                    }
                                    else
                                    {
                                        @foreach (var tag in Model.WorkoutTemplate.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                        {
                                            <span class="badge bg-light text-dark me-1">@tag.Trim()</span>
                                        }
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <div class="mb-3">
                        <a asp-page="StartWorkout" asp-route-id="@Model.WorkoutTemplate.WorkoutTemplateId" class="btn btn-success btn-lg">
                            <i class="bi bi-play-circle"></i> Start Workout
                        </a>
                    </div>
                    <div class="btn-group mb-3">
                        <a asp-page="Edit" asp-route-id="@Model.WorkoutTemplate.WorkoutTemplateId" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-page="Delete" asp-route-id="@Model.WorkoutTemplate.WorkoutTemplateId" class="btn btn-outline-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </div>
                    <div class="mb-3">
                        <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#scheduleModal">
                            <i class="bi bi-calendar-plus"></i> Schedule Workout
                        </button>
                    </div>
                    @if (User.IsInRole("Coach"))
                    {
                        <div>
                            <a asp-page="/TemplateAssignments/AssignTemplate" asp-route-templateId="@Model.WorkoutTemplate.WorkoutTemplateId" class="btn btn-outline-success">
                                <i class="bi bi-person-plus"></i> Assign to Client
                            </a>
                        </div>
                    }
                </div>
            </div>

            <hr />

            <h4 class="mb-3">Exercises</h4>
            @if (!Model.WorkoutTemplate.TemplateExercises.Any())
            {
                <div class="alert alert-warning">
                    <p>This template doesn't have any exercises yet.</p>
                    <a asp-page="Edit" asp-route-id="@Model.WorkoutTemplate.WorkoutTemplateId" class="btn btn-primary btn-sm">
                        <i class="bi bi-plus-circle"></i> Add Exercises
                    </a>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>#</th>
                                <th>Exercise</th>
                                <th>Sets</th>
                                <th>Details</th>
                                <th>Notes</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var exercise in Model.WorkoutTemplate.TemplateExercises.OrderBy(e => e.SequenceNum))
                            {
                                <tr>
                                    <td>@exercise.SequenceNum</td>
                                    <td>@exercise.ExerciseType.Name</td>
                                    <td>@exercise.TemplateSets.Count</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-info" type="button" data-bs-toggle="collapse" 
                                                data-bs-target="#sets-@exercise.WorkoutTemplateExerciseId" aria-expanded="false">
                                            <i class="bi bi-list-ul"></i> View Sets
                                        </button>
                                    </td>
                                    <td>@exercise.Notes</td>
                                </tr>
                                <tr>
                                    <td colspan="5" class="p-0">
                                        <div class="collapse" id="sets-@exercise.WorkoutTemplateExerciseId">
                                            <div class="card card-body m-2">
                                                @if (!exercise.TemplateSets.Any())
                                                {
                                                    <p class="text-muted">No sets defined for this exercise.</p>
                                                }
                                                else
                                                {
                                                    <table class="table table-sm">
                                                        <thead>
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Type</th>
                                                                <th>Reps</th>
                                                                <th>Weight</th>
                                                                <th>Description</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var set in exercise.TemplateSets.OrderBy(s => s.SequenceNum))
                                                            {
                                                                <tr>
                                                                    <td>@set.SequenceNum</td>
                                                                    <td>@set.Settype.Name</td>
                                                                    <td>@set.DefaultReps</td>
                                                                    <td>@set.DefaultWeight kg</td>
                                                                    <td>@set.Description</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Schedule Workout Modal -->
<div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="ScheduleWorkout">
                <div class="modal-header">
                    <h5 class="modal-title" id="scheduleModalLabel">Schedule Workout</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="templateId" value="@Model.WorkoutTemplate.WorkoutTemplateId" />
                    
                    <div class="mb-3">
                        <label for="scheduleName" class="form-label">Schedule Name</label>
                        <input type="text" class="form-control" id="scheduleName" name="name" required value="@Model.WorkoutTemplate.Name" />
                    </div>
                    
                    <div class="mb-3">
                        <label for="scheduleDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="scheduleDescription" name="description" rows="2">@Model.WorkoutTemplate.Description</textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Frequency</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceOnce" value="Once" checked>
                            <label class="form-check-label" for="recurrenceOnce">
                                One-time workout
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceWeekly" value="Weekly">
                            <label class="form-check-label" for="recurrenceWeekly">
                                Weekly
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceBiweekly" value="BiWeekly">
                            <label class="form-check-label" for="recurrenceBiweekly">
                                Bi-weekly
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceMonthly" value="Monthly">
                            <label class="form-check-label" for="recurrenceMonthly">
                                Monthly
                            </label>
                        </div>
                    </div>
                    
                    <div id="weeklyDaysOptions" class="mb-3 d-none">
                        <label class="form-label">Days of Week</label>
                        <div class="d-flex flex-wrap">
                            @foreach (var day in new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" })
                            {
                                <div class="form-check me-3">
                                    <input class="form-check-input weekday-checkbox" type="checkbox" name="daysOfWeek" id="day@(day)" value="@day">
                                    <label class="form-check-label" for="day@(day)">
                                        @day
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div id="monthlyDayOptions" class="mb-3 d-none">
                        <label for="dayOfMonth" class="form-label">Day of Month</label>
                        <select id="dayOfMonth" name="dayOfMonth" class="form-select">
                            @for (int i = 1; i <= 31; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label for="scheduleDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="scheduleDate" name="startDate" required value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    </div>
                    
                    <div class="mb-3">
                        <label for="scheduleTime" class="form-label">Time</label>
                        <input type="time" class="form-control" id="scheduleTime" name="workoutTime" value="17:00" />
                    </div>
                    
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" name="endDate" />
                        <small class="text-muted">Optional. Leave blank for recurring workouts with no end date.</small>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="sendReminder" name="sendReminder" value="true" checked />
                        <label class="form-check-label" for="sendReminder">
                            Send workout reminders
                        </label>
                    </div>
                    
                    <div id="reminderOptions" class="mb-3">
                        <label for="reminderHoursBefore" class="form-label">Hours Before Workout</label>
                        <select id="reminderHoursBefore" name="reminderHoursBefore" class="form-select">
                            <option value="1">1 hour</option>
                            <option value="2">2 hours</option>
                            <option value="3" selected>3 hours</option>
                            <option value="6">6 hours</option>
                            <option value="12">12 hours</option>
                            <option value="24">24 hours</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Schedule Workout</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toggle recurrence pattern options
        $('input[name="recurrencePattern"]').on('change', function() {
            var pattern = $('input[name="recurrencePattern"]:checked').val();
            
            if (pattern === 'Weekly' || pattern === 'BiWeekly') {
                $('#weeklyDaysOptions').removeClass('d-none');
                $('#monthlyDayOptions').addClass('d-none');
                
                // Auto-select the day of week matching the selected date
                var date = new Date(document.getElementById('scheduleDate').value);
                var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                var selectedDay = dayNames[date.getDay()];
                
                // Clear previous selections and select the current day
                document.querySelectorAll('.weekday-checkbox').forEach(cb => cb.checked = false);
                var checkbox = document.querySelector(`#day${selectedDay}`);
                if (checkbox) checkbox.checked = true;
                
            } else if (pattern === 'Monthly') {
                $('#weeklyDaysOptions').addClass('d-none');
                $('#monthlyDayOptions').removeClass('d-none');
                
                // Update day of month selection based on selected date
                var date = new Date(document.getElementById('scheduleDate').value);
                var dayOfMonth = date.getDate();
                document.getElementById('dayOfMonth').value = dayOfMonth;
            } else {
                $('#weeklyDaysOptions').addClass('d-none');
                $('#monthlyDayOptions').addClass('d-none');
            }
        });
        
        // Update recurrence options when date changes
        $('#scheduleDate').on('change', function() {
            var pattern = $('input[name="recurrencePattern"]:checked').val();
            if (pattern === 'Weekly' || pattern === 'BiWeekly') {
                // Auto-select the day of week matching the selected date
                var date = new Date(this.value);
                var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                var selectedDay = dayNames[date.getDay()];
                
                // Clear previous selections and select the current day
                document.querySelectorAll('.weekday-checkbox').forEach(cb => cb.checked = false);
                var checkbox = document.querySelector(`#day${selectedDay}`);
                if (checkbox) checkbox.checked = true;
            } else if (pattern === 'Monthly') {
                // Update day of month selection based on selected date
                var date = new Date(this.value);
                var dayOfMonth = date.getDate();
                document.getElementById('dayOfMonth').value = dayOfMonth;
            }
        });
        
        // Toggle reminder options
        $('#sendReminder').on('change', function() {
            if ($(this).prop('checked')) {
                $('#reminderOptions').removeClass('d-none');
            } else {
                $('#reminderOptions').addClass('d-none');
            }
        });
    </script>
}