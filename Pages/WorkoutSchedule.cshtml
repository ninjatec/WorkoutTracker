@page
@model WorkoutTrackerWeb.Pages.WorkoutScheduleModel
@{
    ViewData["Title"] = "Schedule Workout";
}

<div class="container-fluid">
    <h1>Schedule Workout</h1>
    
    <form method="post">
        <div class="card mb-4">
            <div class="card-header">
                <h4>Schedule Workout Session</h4>
            </div>
            <div class="card-body">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Template/Assignment:</label>
                            <div class="form-check">
                                <input type="radio" id="useTemplate" name="templateType" class="form-check-input" 
                                       checked="@(Model.TemplateId.HasValue)">
                                <label class="form-check-label" for="useTemplate">Use my template</label>
                            </div>
                            <select id="templateSelector" class="form-select mt-2" 
                                    asp-for="ScheduleData.TemplateId"
                                    asp-items="@(new SelectList(Model.AvailableTemplates, "WorkoutTemplateId", "Name"))">
                                <option value="">-- Select Template --</option>
                            </select>
                            
                            <div class="form-check mt-3">
                                <input type="radio" id="useAssignment" name="templateType" class="form-check-input"
                                       checked="@(Model.AssignmentId.HasValue)">
                                <label class="form-check-label" for="useAssignment">Use coach assignment</label>
                            </div>
                            <select id="assignmentSelector" class="form-select mt-2"
                                    asp-for="ScheduleData.AssignmentId"
                                    asp-items="@(new SelectList(Model.AvailableAssignments, "TemplateAssignmentId", "Name"))">
                                <option value="">-- Select Assignment --</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ScheduleData.ScheduleName">Schedule Name:</label>
                            <input asp-for="ScheduleData.ScheduleName" class="form-control" />
                            <span asp-validation-for="ScheduleData.ScheduleName" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mt-3">
                            <label asp-for="ScheduleData.Description">Description (optional):</label>
                            <textarea asp-for="ScheduleData.Description" class="form-control" rows="2"></textarea>
                        </div>
                    </div>
                </div>
                
                <hr>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <h5>Schedule Date & Time</h5>
                        <div class="form-group">
                            <label asp-for="ScheduleData.ScheduleDate">Date:</label>
                            <input asp-for="ScheduleData.ScheduleDate" type="date" class="form-control" />
                            <span asp-validation-for="ScheduleData.ScheduleDate" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mt-3">
                            <label asp-for="ScheduleData.ScheduleTime">Time:</label>
                            <input asp-for="ScheduleData.ScheduleTime" type="time" class="form-control" />
                            <span asp-validation-for="ScheduleData.ScheduleTime" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <h5>Recurrence</h5>
                        <div class="form-group">
                            <label>Recurrence Pattern:</label>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ScheduleData.RecurrenceType" 
                                       id="recurrenceNone" value="none" checked>
                                <label class="form-check-label" for="recurrenceNone">
                                    Once (no recurrence)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ScheduleData.RecurrenceType" 
                                       id="recurrenceDaily" value="daily">
                                <label class="form-check-label" for="recurrenceDaily">
                                    Daily
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ScheduleData.RecurrenceType" 
                                       id="recurrenceWeekly" value="weekly">
                                <label class="form-check-label" for="recurrenceWeekly">
                                    Weekly
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ScheduleData.RecurrenceType" 
                                       id="recurrenceBiweekly" value="biweekly">
                                <label class="form-check-label" for="recurrenceBiweekly">
                                    Bi-weekly
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="ScheduleData.RecurrenceType" 
                                       id="recurrenceMonthly" value="monthly">
                                <label class="form-check-label" for="recurrenceMonthly">
                                    Monthly
                                </label>
                            </div>
                        </div>
                        
                        <div id="weeklyDaysOptions" class="mt-3 d-none">
                            <label>Day of week:</label>
                            <div class="d-flex flex-wrap">
                                @foreach (var day in Enum.GetNames(typeof(DayOfWeek)))
                                {
                                    <div class="form-check me-3">
                                        <input class="form-check-input" type="checkbox" name="ScheduleData.SelectedDaysOfWeek" 
                                               id="day@(day)" value="@day">
                                        <label class="form-check-label" for="day@(day)">@day</label>
                                    </div>
                                }
                            </div>
                        </div>
                        
                        <div id="monthlyDayOptions" class="mt-3 d-none">
                            <label>Day of month:</label>
                            <select class="form-select" name="ScheduleData.RecurrenceDayOfMonth">
                                @for (int i = 1; i <= 31; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                        
                        <div id="recurrenceEndDateContainer" class="mt-3 d-none">
                            <label asp-for="ScheduleData.RecurrenceEndDate">End date (optional):</label>
                            <input asp-for="ScheduleData.RecurrenceEndDate" type="date" class="form-control" />
                        </div>
                    </div>
                </div>
                
                <hr>
                
                <div class="row">
                    <div class="col-md-6">
                        <h5>Reminders</h5>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" asp-for="ScheduleData.SendReminder" id="sendReminder">
                            <label class="form-check-label" for="sendReminder">
                                Send reminder
                            </label>
                        </div>
                        
                        <div id="reminderOptions" class="mt-3">
                            <label>Remind me</label>
                            <div class="input-group">
                                <input type="number" class="form-control" asp-for="ScheduleData.ReminderHoursBefore" min="1" max="72">
                                <span class="input-group-text">hours before</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary">Schedule Workout</button>
                <a href="/WorkoutTemplates" class="btn btn-secondary">Cancel</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle template/assignment selection
            $('#useTemplate, #useAssignment').on('change', function() {
                if ($('#useTemplate').is(':checked')) {
                    $('#templateSelector').prop('disabled', false);
                    $('#assignmentSelector').prop('disabled', true).val('');
                } else {
                    $('#templateSelector').prop('disabled', true).val('');
                    $('#assignmentSelector').prop('disabled', false);
                }
            });
            
            // Trigger initial state
            if ($('#ScheduleData_TemplateId').val()) {
                $('#useTemplate').prop('checked', true);
                $('#assignmentSelector').prop('disabled', true).val('');
            } else if ($('#ScheduleData_AssignmentId').val()) {
                $('#useAssignment').prop('checked', true);
                $('#templateSelector').prop('disabled', true).val('');
            } else {
                $('#useTemplate').prop('checked', true);
                $('#assignmentSelector').prop('disabled', true);
            }
            
            // Handle recurrence pattern selection
            $('input[name="ScheduleData.RecurrenceType"]').on('change', function() {
                var pattern = $('input[name="ScheduleData.RecurrenceType"]:checked').val();
                
                if (pattern === 'none') {
                    $('#recurrenceEndDateContainer').addClass('d-none');
                    $('#weeklyDaysOptions').addClass('d-none');
                    $('#monthlyDayOptions').addClass('d-none');
                } else {
                    $('#recurrenceEndDateContainer').removeClass('d-none');
                    
                    if (pattern === 'weekly' || pattern === 'biweekly') {
                        $('#weeklyDaysOptions').removeClass('d-none');
                        $('#monthlyDayOptions').addClass('d-none');
                    } else if (pattern === 'monthly') {
                        $('#monthlyDayOptions').removeClass('d-none');
                        $('#weeklyDaysOptions').addClass('d-none');
                    } else {
                        $('#weeklyDaysOptions').addClass('d-none');
                        $('#monthlyDayOptions').addClass('d-none');
                    }
                }
            });
            
            // Handle reminder toggle
            $('#sendReminder').on('change', function() {
                if ($(this).is(':checked')) {
                    $('#reminderOptions').removeClass('d-none');
                } else {
                    $('#reminderOptions').addClass('d-none');
                }
            });
            
            // Set initial state for reminders
            if (!$('#sendReminder').is(':checked')) {
                $('#reminderOptions').addClass('d-none');
            }
        });
    </script>
    
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}