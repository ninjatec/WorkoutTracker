@page
@model WorkoutTrackerWeb.Pages.Workouts.ScheduledWorkoutsModel
@{
    ViewData["Title"] = "Scheduled Workouts";
}

<div class="container-fluid">
    <div class="mb-4 d-flex justify-content-between align-items-center">
        <h1 class="h3">Scheduled Workouts</h1>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Upcoming Workouts</h5>
                    <a href="/Templates/Index" class="btn btn-sm btn-primary">
                        <i class="bi bi-plus me-1"></i> Schedule New Workout
                    </a>
                </div>
                <div class="card-body">
                    @if (Model.UpcomingSchedules.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Workout</th>
                                        <th>Schedule</th>
                                        <th>Date/Time</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var schedule in Model.UpcomingSchedules)
                                    {
                                        <tr>
                                            <td>
                                                <div>@schedule.Name</div>
                                                <small class="text-muted">@(schedule.TemplateName ?? "Custom")</small>
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    @if (schedule.RecurrencePattern == "Weekly" && schedule.RecurrenceDayOfWeek.HasValue)
                                                    {
                                                        <div>Every @((DayOfWeek)schedule.RecurrenceDayOfWeek.Value)</div>
                                                    }
                                                    else if (schedule.RecurrencePattern == "BiWeekly" && schedule.RecurrenceDayOfWeek.HasValue)
                                                    {
                                                        <div>Bi-weekly on @((DayOfWeek)schedule.RecurrenceDayOfWeek.Value)</div>
                                                    }
                                                    else if (schedule.RecurrencePattern == "Monthly" && schedule.RecurrenceDayOfMonth.HasValue)
                                                    {
                                                        <div>Monthly on day @schedule.RecurrenceDayOfMonth</div>
                                                    }
                                                    else
                                                    {
                                                        <div>@schedule.RecurrencePattern</div>
                                                    }
                                                    
                                                    @if (schedule.EndDate.HasValue)
                                                    {
                                                        <small class="text-muted">Until @schedule.EndDate.Value.ToShortDateString()</small>
                                                    }
                                                    else
                                                    {
                                                        <small class="text-muted">No end date</small>
                                                    }
                                                }
                                                else
                                                {
                                                    <div>One-time</div>
                                                }
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    <div>Next: @schedule.ScheduledDateTime?.ToString("MMM dd, yyyy")</div>
                                                    <div>at @schedule.ScheduledDateTime?.ToString("h:mm tt")</div>
                                                }
                                                else
                                                {
                                                    <div>@schedule.ScheduledDateTime?.ToString("MMM dd, yyyy")</div>
                                                    <div>@schedule.ScheduledDateTime?.ToString("h:mm tt")</div>
                                                }
                                            </td>
                                            <td>
                                                @if (schedule.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-sm btn-outline-primary edit-schedule" 
                                                            data-schedule-id="@schedule.WorkoutScheduleId"
                                                            data-bs-toggle="modal" data-bs-target="#editScheduleModal">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <form method="post" asp-page-handler="ToggleSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <input type="hidden" name="isActive" value="@(!schedule.IsActive)" />
                                                        <button type="submit" class="btn btn-sm @(schedule.IsActive ? "btn-outline-warning" : "btn-outline-success")">
                                                            <i class="bi @(schedule.IsActive ? "bi-pause" : "bi-play")"></i>
                                                        </button>
                                                    </form>
                                                    <form method="post" asp-page-handler="DeleteSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                onclick="return confirm('Are you sure you want to delete this scheduled workout?');">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">You don't have any scheduled workouts yet.</p>
                            <a href="/Templates/Index" class="btn btn-primary mt-2">
                                <i class="bi bi-plus"></i> Schedule a Workout
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model.CompletedSchedules.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Completed Workouts</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Workout</th>
                                        <th>Schedule</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var schedule in Model.CompletedSchedules)
                                    {
                                        <tr>
                                            <td>
                                                <div>@schedule.Name</div>
                                                <small class="text-muted">@(schedule.TemplateName ?? "Custom")</small>
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    <div>@schedule.RecurrencePattern</div>
                                                }
                                                else
                                                {
                                                    <div>One-time</div>
                                                }
                                            </td>
                                            <td>
                                                <div>@schedule.ScheduledDateTime?.ToString("MMM dd, yyyy")</div>
                                                <div>@schedule.ScheduledDateTime?.ToString("h:mm tt")</div>
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <form method="post" asp-page-handler="DeleteSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                onclick="return confirm('Are you sure you want to delete this scheduled workout?');">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Edit Schedule Modal -->
<div class="modal fade" id="editScheduleModal" tabindex="-1" aria-labelledby="editScheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="EditSchedule">
                <div class="modal-header">
                    <h5 class="modal-title" id="editScheduleModalLabel">Edit Scheduled Workout</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editScheduleId" name="scheduleId" />
                    
                    <div class="mb-3">
                        <label for="editScheduleName" class="form-label">Schedule Name</label>
                        <input type="text" class="form-control" id="editScheduleName" name="name" required />
                    </div>
                    
                    <div class="mb-3">
                        <label for="editScheduleDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editScheduleDescription" name="description" rows="2"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="editScheduleDateTime" class="form-label">Next Workout Date/Time</label>
                        <div class="row">
                            <div class="col">
                                <input type="date" class="form-control" id="editScheduleDate" name="scheduleDate" required />
                            </div>
                            <div class="col">
                                <input type="time" class="form-control" id="editScheduleTime" name="scheduleTime" required />
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="editEndDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="editEndDate" name="endDate" />
                        <small class="text-muted">Optional. Leave blank for recurring workouts with no end date.</small>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="editSendReminder" name="sendReminder" value="true" checked />
                        <label class="form-check-label" for="editSendReminder">
                            Send workout reminders
                        </label>
                    </div>
                    
                    <div id="editReminderOptions" class="mb-3">
                        <label for="editReminderHoursBefore" class="form-label">Hours Before Workout</label>
                        <select id="editReminderHoursBefore" name="reminderHoursBefore" class="form-select">
                            <option value="1">1 hour</option>
                            <option value="2">2 hours</option>
                            <option value="3" selected>3 hours</option>
                            <option value="6">6 hours</option>
                            <option value="12">12 hours</option>
                            <option value="24">24 hours</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle edit schedule modal
        $('.edit-schedule').on('click', function() {
            var scheduleId = $(this).data('schedule-id');
            
            // Loading indicator if needed
            $('#editScheduleModalLabel').text('Loading...');
            
            // Fetch schedule data
            $.ajax({
                url: '/api/WorkoutSchedule/' + scheduleId,
                type: 'GET',
                success: function(data) {
                    // Populate form fields
                    $('#editScheduleId').val(data.workoutScheduleId);
                    $('#editScheduleName').val(data.name);
                    $('#editScheduleDescription').val(data.description);
                    
                    // Format date and time
                    var scheduledDate = new Date(data.scheduledDateTime);
                    var dateString = scheduledDate.toISOString().split('T')[0];
                    var timeString = scheduledDate.toTimeString().split(' ')[0].substring(0, 5);
                    
                    $('#editScheduleDate').val(dateString);
                    $('#editScheduleTime').val(timeString);
                    
                    // Handle end date
                    if (data.endDate) {
                        var endDate = new Date(data.endDate);
                        $('#editEndDate').val(endDate.toISOString().split('T')[0]);
                    } else {
                        $('#editEndDate').val('');
                    }
                    
                    // Reminder settings
                    $('#editSendReminder').prop('checked', data.sendReminder);
                    $('#editReminderHoursBefore').val(data.reminderHoursBefore);
                    
                    // Toggle reminder options based on checkbox
                    if (data.sendReminder) {
                        $('#editReminderOptions').removeClass('d-none');
                    } else {
                        $('#editReminderOptions').addClass('d-none');
                    }
                    
                    // Update modal title
                    $('#editScheduleModalLabel').text('Edit Scheduled Workout');
                },
                error: function() {
                    alert('Error loading schedule data');
                    // Close the modal
                    $('#editScheduleModal').modal('hide');
                }
            });
        });
        
        // Toggle reminder options in edit modal
        $('#editSendReminder').on('change', function() {
            if ($(this).prop('checked')) {
                $('#editReminderOptions').removeClass('d-none');
            } else {
                $('#editReminderOptions').addClass('d-none');
            }
        });
        
        // Initialize DataTable for workout schedules
        $(document).ready(function() {
            $('.table').DataTable({
                "order": [[ 2, "asc" ]],
                "pageLength": 10,
                "lengthChange": false,
                "searching": true,
                "responsive": true,
                "language": {
                    "search": "Filter:",
                    "zeroRecords": "No matching workouts found"
                }
            });
        });
    </script>
}