@page
@using WorkoutTrackerWeb.Extensions
@model WorkoutTrackerWeb.Pages.Workouts.QuickWorkoutModel
@{
    ViewData["Title"] = "Quick Workout";
    var statusAlert = !string.IsNullOrEmpty(Model.StatusMessage) ? "alert-info" : "";
}

<div class="container-fluid mt-3 quick-workout-container">
    <h2 class="display-6">Quick Workout</h2>
    <p class="lead">Add exercises with minimal clicks - optimized for gym use.</p>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert @statusAlert alert-dismissible fade show" role="alert">
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Timer container div -->
    <div id="timer-container"></div>

    <!-- Floating timer button (mobile only) -->
    <button type="button" class="floating-timer-button" id="floating-timer-button" aria-label="Timer">
        <i class="bi bi-stopwatch"></i>
    </button>

    <!-- Reordering container for mobile UI - Active Session moves to bottom -->
    <div class="row g-3 mb-4 workout-session-container">
        <!-- Add set card - always at the top -->
        <div class="col-12 col-md-6 order-1">
            <div class="card h-100 shadow-sm">
                <div class="card-header d-flex align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-plus-circle-dotted me-2"></i>Add Set
                    </h5>
                </div>
                <div class="card-body">
                    @if (!Model.QuickWorkout.HasActiveSession)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            Start a session first to add exercises
                        </div>
                    }
                    else
                    {
                        <form method="post" asp-page-handler="AddSet">
                            <div class="row g-2">
                                <div class="col-md-6">
                                    <div class="mb-2">
                                        <label asp-for="QuickWorkout.ExerciseTypeId" class="form-label">Exercise</label>
                                        <select asp-for="QuickWorkout.ExerciseTypeId" class="form-select" required>
                                            <option value="">-- Select Exercise --</option>
                                            @foreach (var exercise in Model.QuickWorkout.ExerciseTypes)
                                            {
                                                <option value="@exercise.ExerciseTypeId">@exercise.Name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-2">
                                        <label asp-for="QuickWorkout.SettypeId" class="form-label">Set Type</label>
                                        <select asp-for="QuickWorkout.SettypeId" class="form-select" required>
                                            <option value="">-- Select Type --</option>
                                            @foreach (var setType in Model.QuickWorkout.SetTypes)
                                            {
                                                <option value="@setType.SettypeId">@setType.Name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row g-2">
                                <div class="col-md-6">
                                    <div class="mb-2">
                                        <label asp-for="QuickWorkout.Weight" class="form-label">Weight (kg)</label>
                                        <input asp-for="QuickWorkout.Weight" class="form-control" type="number" step="0.5" required />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-2">
                                        <label asp-for="QuickWorkout.NumberReps" class="form-label">Reps</label>
                                        <input asp-for="QuickWorkout.NumberReps" class="form-control" type="number" required />
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success w-100">
                                <i class="bi bi-plus-lg me-1"></i> Add Set
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>

        <!-- Active session card -->
        <div class="col-12 col-md-6 order-2 order-md-1 active-session-container">
            <div class="card h-100 shadow-sm">
                <div class="card-header d-flex align-items-center">
                    <h5 class="mb-0">
                        @if (Model.QuickWorkout.HasActiveSession)
                        {
                            <span class="text-success">
                                <i class="bi bi-play-circle-fill me-2"></i>Active Session
                            </span>
                        }
                        else
                        {
                            <span class="text-secondary">
                                <i class="bi bi-plus-circle me-2"></i>Start New Session
                            </span>
                        }
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.QuickWorkout.HasActiveSession && Model.QuickWorkout.CurrentSession != null)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="card-title mb-0">@Model.QuickWorkout.CurrentSession.Name</h5>
                            <span class="badge bg-primary">
                                Started @Model.QuickWorkout.CurrentSession.StartDateTime.ToString("HH:mm")
                            </span>
                        </div>
                        <div class="d-flex gap-2 mt-2">
                            <a asp-page="/Sessions/Details" asp-route-id="@Model.QuickWorkout.CurrentSession.WorkoutSessionId" 
                               class="btn btn-outline-primary flex-grow-1">
                                <i class="bi bi-eye me-1"></i> View Details
                            </a>
                            <button type="button" class="btn btn-outline-success flex-grow-1" 
                                   data-bs-toggle="modal" data-bs-target="#finishWorkoutModal">
                                <i class="bi bi-check-circle me-1"></i> Finish Workout
                            </button>
                        </div>
                    }
                    else
                    {
                        <form method="post" asp-page-handler="CreateSession">
                            <div class="mb-3">
                                <label for="NewSessionName" class="form-label">Session Name</label>
                                <input type="text" class="form-control" id="NewSessionName" name="NewSessionName" 
                                       value="@($"Quick Workout {DateTime.Now:yyyy-MM-dd HH:mm}")" />
                            </div>
                            <div class="mb-3">
                                <label for="StartTime" class="form-label">Start Time</label>
                                <input type="datetime-local" class="form-control" id="StartTime" name="StartTime" 
                                       value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                            </div>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-play-fill me-1"></i> Start Workout
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-4">
        <!-- Recent sets card -->
        @if (Model.QuickWorkout.HasActiveSession && Model.QuickWorkout.RecentWorkoutSets.Any())
        {
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-clock-history me-2"></i>Recent Sets
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Exercise</th>
                                        <th>Status</th>
                                        <th>Weight</th>
                                        <th>Reps</th>
                                        <th>Added</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var set in Model.QuickWorkout.RecentWorkoutSets)
                                    {
                                        <tr>
                                            <td>@set.WorkoutExercise.ExerciseType?.Name</td>
                                            <td>@set.WorkoutExercise.WorkoutSession.Status</td>
                                            <td>@set.Weight kg</td>
                                            <td>@set.Reps</td>
                                            <td>Just now</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Exercise selection tabs -->
    <div class="row g-3 mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light p-0">
                    <ul class="nav nav-tabs nav-fill card-header-tabs border-bottom-0" id="exerciseTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="by-muscle-tab" data-bs-toggle="tab" 
                                    data-bs-target="#by-muscle" type="button" role="tab">By Muscle</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="recent-tab" data-bs-toggle="tab" 
                                    data-bs-target="#recent" type="button" role="tab">Recent</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="favorites-tab" data-bs-toggle="tab" 
                                    data-bs-target="#favorites" type="button" role="tab">Favorites</button>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="exerciseTabsContent">
                        <!-- By Muscle Tab -->
                        <div class="tab-pane fade show active" id="by-muscle" role="tabpanel">
                            <div class="d-flex flex-wrap gap-2 mb-3">
                                @foreach (var muscleGroup in Model.QuickWorkout.MuscleGroups)
                                {
                                    <a asp-page="/Workouts/QuickWorkout" asp-route-muscleGroup="@muscleGroup" 
                                       class="btn @(muscleGroup == Model.QuickWorkout.SelectedMuscleGroup ? "btn-primary" : "btn-outline-primary")">
                                        @muscleGroup.ToTitleCase()
                                    </a>
                                }
                            </div>
                        </div>
                        
                        <!-- Recent Tab -->
                        <div class="tab-pane fade" id="recent" role="tabpanel">
                            <div class="list-group">
                                @foreach (var exercise in Model.QuickWorkout.RecentExercises)
                                {
                                    <button type="button" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" 
                                            onclick="selectExercise(@exercise.ExerciseType.ExerciseTypeId, '@exercise.ExerciseType.Name')">
                                        @exercise.ExerciseType.Name
                                        <span class="badge bg-primary rounded-pill">@exercise.UseCount</span>
                                    </button>
                                }
                            </div>
                        </div>
                        
                        <!-- Favorites Tab -->
                        <div class="tab-pane fade" id="favorites" role="tabpanel">
                            <div class="list-group">
                                @foreach (var exercise in Model.QuickWorkout.FavoriteExercises)
                                {
                                    <button type="button" class="list-group-item list-group-item-action" 
                                            onclick="selectExercise(@exercise.ExerciseTypeId, '@exercise.Name')">
                                        @exercise.Name
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Finish Workout Modal -->
<div class="modal fade" id="finishWorkoutModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Finish Workout</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you ready to finish this workout session?</p>
                <form method="post" asp-page-handler="CreateSession">
                    <input type="hidden" name="finishCurrent" value="true" />
                    <div class="mb-3">
                        <label for="newSessionName" class="form-label">Start a new session? (Optional)</label>
                        <input type="text" class="form-control" id="NewSessionName" name="NewSessionName" 
                               placeholder="Leave blank to just finish current session" />
                    </div>
                    <div class="mb-3">
                        <label for="StartTime" class="form-label">Start Time</label>
                        <input type="datetime-local" class="form-control" id="StartTime" name="StartTime" 
                               value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle me-1"></i>Finish & Start New
                        </button>
                        <button type="submit" class="btn btn-outline-secondary" formnovalidate>
                            <i class="bi bi-check me-1"></i>Just Finish
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>