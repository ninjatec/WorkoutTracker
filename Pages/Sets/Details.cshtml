@page
@model WorkoutTrackerWeb.Pages.Sets.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Set</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Session
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.Session.Name)
        </dd>
        <dt class="col-sm-2">
            Session Date/Time
        </dt>
        <dd class="col-sm-10">
            @Model.Set.Session.datetime.ToString("dd/MM/yy HH:mm")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Set.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Set.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.Notes)
        </dd>
        <dt class="col-sm-2">
            Number of Reps
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.NumberReps)
        </dd>
        <dt class="col-sm-2">
            Weight (kg)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.Weight)
        </dd>
        <dt class="col-sm-2">
            Exercise Type
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.ExerciseType.Name)
        </dd>
        @if (!string.IsNullOrEmpty(Model.Set.ExerciseType.Muscle))
        {
            <dt class="col-sm-2">
                Muscle Group
            </dt>
            <dd class="col-sm-10">
                <span class="badge bg-info">@Model.Set.ExerciseType.Muscle</span>
            </dd>
        }
        <dt class="col-sm-2">
            Set Type
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Set.Settype.Name)
        </dd>
    </dl>
</div>

@if (Model.Set.Reps != null && Model.Set.Reps.Any())
{
    <div class="mt-4">
        <h4>Reps</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Rep #</th>
                    <th>Weight (kg)</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var rep in Model.Set.Reps.OrderBy(r => r.repnumber))
                {
                    <tr>
                        <td>@rep.repnumber</td>
                        <td>@rep.weight</td>
                        <td>
                            @if (rep.success)
                            {
                                <span class="badge bg-success">Success</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Failed</span>
                            }
                        </td>
                        <td>
                            <a asp-page="/Reps/Edit" asp-route-id="@rep.RepId" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-page="/Reps/Details" asp-route-id="@rep.RepId" class="btn btn-sm btn-secondary">Details</a>
                            <a asp-page="/Reps/Delete" asp-route-id="@rep.RepId" class="btn btn-sm btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info mt-4">No reps recorded for this set yet.</div>
}

<div>
    <a asp-page="./Edit" asp-route-id="@Model.Set.SetId">Edit</a> |
    <a asp-page="/Reps/Create" asp-route-setId="@Model.Set.SetId" class="btn btn-primary">Add Reps</a> |
    <a asp-page="./Index">Back to List</a>
</div>
