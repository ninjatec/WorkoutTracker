@page
@model WorkoutTrackerWeb.Pages.Sets.IndexModel

@{
    ViewData["Title"] = "Sets";
}

<h1>Sets</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SessionSort">Session</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ExerciseSort">Exercise Type</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SetTypeSort">Set Type</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DescriptionSort">
                    @Html.DisplayNameFor(model => model.Set[0].Description)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NotesSort">
                    @Html.DisplayNameFor(model => model.Set[0].Notes)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NumberRepsSort">Number of Reps</a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.WeightSort">Weight (kg)</a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Set) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Session.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExerciseType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Settype.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberReps)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.SetId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.SetId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.SetId">Delete</a> |
                <a asp-page-handler="Duplicate" asp-route-id="@item.SetId">Duplicate</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        // Add some visual indication of sorted columns
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const sortOrder = urlParams.get('sortOrder');
            if (sortOrder) {
                const headers = document.querySelectorAll('th a');
                headers.forEach(header => {
                    const href = header.getAttribute('href');
                    if (href.includes(sortOrder)) {
                        header.style.fontWeight = 'bold';
                        header.style.color = '#0366d6';
                    }
                });
            }
        });
    </script>
}
