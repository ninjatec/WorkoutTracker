// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTrackerweb.Data;

#nullable disable

namespace WorkoutTrackerWeb.Migrations
{
    [DbContext(typeof(WorkoutTrackerWebContext))]
    [Migration("20250414103152_FixRepSetRelationshipNames")]
    partial class FixRepSetRelationshipNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlossaryTermGlossaryTerm", b =>
                {
                    b.Property<int>("GlossaryTermId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedTermsId")
                        .HasColumnType("int");

                    b.HasKey("GlossaryTermId", "RelatedTermsId");

                    b.HasIndex("RelatedTermsId");

                    b.ToTable("GlossaryTermRelatedTerms", (string)null);
                });

            modelBuilder.Entity("HelpArticleHelpArticle", b =>
                {
                    b.Property<int>("HelpArticleId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedArticlesId")
                        .HasColumnType("int");

                    b.HasKey("HelpArticleId", "RelatedArticlesId");

                    b.HasIndex("RelatedArticlesId");

                    b.ToTable("HelpArticleRelatedArticles", (string)null);
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.ExerciseType", b =>
                {
                    b.Property<int>("ExerciseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExerciseTypeId");

                    b.ToTable("ExerciseType");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.GlossaryTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GlossaryTerm");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.HelpArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("HasVideo")
                        .HasColumnType("bit");

                    b.Property<int>("HelpCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrintable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Version")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HelpCategoryId");

                    b.ToTable("HelpArticle");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.HelpCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IconClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("HelpCategory");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.LoginHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeviceType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Platform")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("LoginHistory");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Rep", b =>
                {
                    b.Property<int>("RepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepId"));

                    b.Property<int?>("SetsSetId")
                        .HasColumnType("int");

                    b.Property<int>("repnumber")
                        .HasColumnType("int");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("RepId");

                    b.HasIndex("SetsSetId");

                    b.ToTable("Rep");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberReps")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("SettypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("SetId");

                    b.HasIndex("ExerciseTypeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("SettypeId");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Settype", b =>
                {
                    b.Property<int>("SettypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SettypeId");

                    b.ToTable("Settype");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("IdentityUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GlossaryTermGlossaryTerm", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.GlossaryTerm", null)
                        .WithMany()
                        .HasForeignKey("GlossaryTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.GlossaryTerm", null)
                        .WithMany()
                        .HasForeignKey("RelatedTermsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HelpArticleHelpArticle", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.HelpArticle", null)
                        .WithMany()
                        .HasForeignKey("HelpArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.HelpArticle", null)
                        .WithMany()
                        .HasForeignKey("RelatedArticlesId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Feedback", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.HelpArticle", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.HelpCategory", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("HelpCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.HelpCategory", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.HelpCategory", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Rep", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.Set", "Set")
                        .WithMany("Reps")
                        .HasForeignKey("SetsSetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Set");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.ExerciseType", "ExerciseType")
                        .WithMany("Sets")
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.Session", "Session")
                        .WithMany("Sets")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.Settype", "Settype")
                        .WithMany()
                        .HasForeignKey("SettypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseType");

                    b.Navigation("Session");

                    b.Navigation("Settype");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.ExerciseType", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.HelpCategory", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.Navigation("Reps");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.User", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
