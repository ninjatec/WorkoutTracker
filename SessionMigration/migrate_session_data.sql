-- Script to ensure all Session records have corresponding WorkoutSession records\n-- This script will only create WorkoutSession entries for Sessions that don't already have one\n\n-- First identify Sessions without corresponding WorkoutSession records\nDECLARE @MissingSessionsCount INT;\n\nSELECT @MissingSessionsCount = COUNT(*)\nFROM Session s\nLEFT JOIN WorkoutSessions ws ON ws.SessionId = s.SessionId\nWHERE ws.WorkoutSessionId IS NULL;\n\nPRINT 'Found ' + CAST(@MissingSessionsCount AS VARCHAR) + ' Sessions without corresponding WorkoutSession records';\n\n-- Create WorkoutSession records for Sessions without them\nINSERT INTO WorkoutSessions (\n    Name, \n    Description, \n    UserId, \n    StartDateTime, \n    EndDateTime,\n    Status, \n    SessionId,\n    Duration,\n    IsCompleted\n)\nSELECT \n    s.Name, \n    s.Notes, \n    s.UserId, \n    s.datetime,\n    s.endtime,\n    CASE \n        WHEN s.endtime IS NOT NULL THEN 'Completed'\n        ELSE 'Created'\n    END,\n    s.SessionId,\n    CASE\n        WHEN s.endtime IS NOT NULL THEN DATEDIFF(MINUTE, s.datetime, s.endtime)\n        ELSE 0\n    END,\n    CASE\n        WHEN s.endtime IS NOT NULL THEN 1\n        ELSE 0\n    END\nFROM Session s\nLEFT JOIN WorkoutSessions ws ON ws.SessionId = s.SessionId\nWHERE ws.WorkoutSessionId IS NULL;\n\n-- Report on results\nSELECT 'Successfully created ' + CAST(@@ROWCOUNT AS VARCHAR) + ' WorkoutSession records';\n\n-- Verify results\nSELECT \n    'Total Session records' AS Metric, COUNT(*) AS Count \nFROM Session\nUNION ALL\nSELECT \n    'Total WorkoutSession records' AS Metric, COUNT(*) AS Count \nFROM WorkoutSessions\nUNION ALL\nSELECT \n    'Sessions without WorkoutSession' AS Metric, COUNT(*) AS Count\nFROM Session s\nLEFT JOIN WorkoutSessions ws ON ws.SessionId = s.SessionId\nWHERE ws.WorkoutSessionId IS NULL;\n
