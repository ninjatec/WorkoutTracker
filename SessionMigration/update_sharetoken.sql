-- Script to update ShareToken table to reference WorkoutSession instead of Session\n\n-- Step 1: Add WorkoutSessionId column if it doesn't exist\nIF NOT EXISTS (\n    SELECT 1 \n    FROM sys.columns \n    WHERE name = 'WorkoutSessionId' \n    AND object_id = OBJECT_ID('dbo.ShareToken')\n)\nBEGIN\n    ALTER TABLE ShareToken ADD WorkoutSessionId int NULL;\n    PRINT 'Added WorkoutSessionId column to ShareToken table';\nEND\nELSE\n    PRINT 'WorkoutSessionId column already exists in ShareToken table';\n\n-- Step 2: Update ShareToken records to reference WorkoutSession\nUPDATE st\nSET st.WorkoutSessionId = ws.WorkoutSessionId\nFROM ShareToken st\nJOIN WorkoutSessions ws ON ws.SessionId = st.SessionId\nWHERE st.SessionId IS NOT NULL\nAND st.WorkoutSessionId IS NULL;\n\nPRINT 'Updated ' + CAST(@@ROWCOUNT AS VARCHAR) + ' ShareToken records with WorkoutSessionId';\n\n-- Step 3: Verify the update\nSELECT \n    'ShareToken records with SessionId' AS Metric, \n    COUNT(*) AS Count \nFROM ShareToken \nWHERE SessionId IS NOT NULL\nUNION ALL\nSELECT \n    'ShareToken records with WorkoutSessionId' AS Metric, \n    COUNT(*) AS Count \nFROM ShareToken \nWHERE WorkoutSessionId IS NOT NULL\nUNION ALL\nSELECT \n    'ShareToken records with both IDs matching correctly' AS Metric, \n    COUNT(*) AS Count\nFROM ShareToken st\nJOIN WorkoutSessions ws ON ws.WorkoutSessionId = st.WorkoutSessionId\nWHERE st.SessionId = ws.SessionId\nUNION ALL\nSELECT \n    'ShareToken records with mismatched IDs' AS Metric, \n    COUNT(*) AS Count\nFROM ShareToken st\nJOIN WorkoutSessions ws ON ws.WorkoutSessionId = st.WorkoutSessionId\nWHERE st.SessionId IS NOT NULL \nAND st.SessionId != ws.SessionId;\n\n-- Note: The following commented line should only be run after verification and as part of Phase 6\n-- ALTER TABLE ShareToken DROP COLUMN SessionId;\n
