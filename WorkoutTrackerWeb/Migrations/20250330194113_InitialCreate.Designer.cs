// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTrackerweb.Data;

#nullable disable

namespace WorkoutTrackerWeb.Migrations
{
    [DbContext(typeof(WorkoutTrackerWebContext))]
    [Migration("20250330194113_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Excercise", b =>
                {
                    b.Property<int>("ExcerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExcerciseId"));

                    b.Property<string>("ExcerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExcerciseId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Excercise");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Rep", b =>
                {
                    b.Property<int>("RepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepId"));

                    b.Property<int>("ExcerciseId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("repnumber")
                        .HasColumnType("int");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("RepId");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("SessionId");

                    b.HasIndex("SetId");

                    b.HasIndex("UserId");

                    b.ToTable("Rep");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExcerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SetId");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Settype", b =>
                {
                    b.Property<int>("SettypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SettypeId");

                    b.ToTable("Settype");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Excercise", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.Session", "Session")
                        .WithMany("Excercise")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany("Excercise")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Rep", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.Excercise", "Excercise")
                        .WithMany("Rep")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.Session", "Session")
                        .WithMany("Rep")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.Set", "Set")
                        .WithMany("Rep")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany("Rep")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Session");

                    b.Navigation("Set");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany("Session")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.HasOne("WorkoutTrackerWeb.Models.Excercise", "Excercise")
                        .WithMany("Set")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.Session", "Session")
                        .WithMany("Set")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTrackerWeb.Models.User", "User")
                        .WithMany("Set")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Excercise", b =>
                {
                    b.Navigation("Rep");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Session", b =>
                {
                    b.Navigation("Excercise");

                    b.Navigation("Rep");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.Set", b =>
                {
                    b.Navigation("Rep");
                });

            modelBuilder.Entity("WorkoutTrackerWeb.Models.User", b =>
                {
                    b.Navigation("Excercise");

                    b.Navigation("Rep");

                    b.Navigation("Session");

                    b.Navigation("Set");
                });
#pragma warning restore 612, 618
        }
    }
}
