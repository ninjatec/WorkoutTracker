@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link text-dark position-relative me-3" asp-page="/Notifications/Index">
            <i class="fas fa-bell"></i>
            @await Component.InvokeAsync("NotificationBadge")
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            <i class="fas fa-user-circle me-1"></i>
            Hello @User.Identity?.Name!
        </a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post">
            <button type="submit" class="nav-link btn btn-link text-dark">
                <i class="fas fa-sign-out-alt me-1"></i>
                Logout
            </button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@Context.Request.Path">
            <i class="fas fa-user-plus me-1"></i>
            Register
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Context.Request.Path">
            <i class="fas fa-sign-in-alt me-1"></i>
            Login
        </a>
    </li>
}
</ul>