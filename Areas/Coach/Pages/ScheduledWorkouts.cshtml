@page
@model WorkoutTrackerWeb.Areas.Coach.Pages.ScheduledWorkoutsModel
@{
    ViewData["Title"] = Model.IsClientView ? $"Scheduled Workouts for {Model.Client?.Name}" : "All Scheduled Workouts";
}

<div class="container-fluid">
    <div class="mb-4 d-flex justify-content-between align-items-center">
        <h1 class="h3">
            @if (Model.IsClientView)
            {
                <span>Scheduled Workouts for @Model.Client?.Name</span>
            }
            else
            {
                <span>All Scheduled Workouts</span>
            }
        </h1>
        @if (Model.IsClientView)
        {
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#scheduleWorkoutModal">
                <i class="bi bi-plus me-1"></i> Schedule New Workout
            </button>
        }
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Upcoming Workouts</h5>
                    @if (Model.IsClientView)
                    {
                        <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#scheduleWorkoutModal">
                            <i class="bi bi-plus me-1"></i> Schedule New Workout
                        </button>
                    }
                </div>
                <div class="card-body">
                    @if (Model.UpcomingSchedules.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover" id="upcomingSchedulesTable">
                                <thead>
                                    <tr>
                                        @if (!Model.IsClientView)
                                        {
                                            <th>Client</th>
                                        }
                                        <th>Workout</th>
                                        <th>Schedule</th>
                                        <th>Date/Time</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var schedule in Model.UpcomingSchedules)
                                    {
                                        <tr>
                                            @if (!Model.IsClientView)
                                            {
                                                <td>
                                                    <a asp-page="./Clients/AssignedWorkouts" asp-route-clientId="@schedule.ClientUserId">
                                                        @schedule.ClientName
                                                    </a>
                                                </td>
                                            }
                                            <td>
                                                <div>@schedule.Name</div>
                                                <small class="text-muted">@(schedule.TemplateName ?? "Custom")</small>
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    @if (schedule.RecurrencePattern == "Weekly" || schedule.RecurrencePattern == "BiWeekly")
                                                    {
                                                        var allDays = schedule.GetAllDaysOfWeek();
                                                        if (allDays.Count > 0)
                                                        {
                                                            <div>
                                                                @(schedule.RecurrencePattern == "Weekly" ? "Weekly" : "Bi-weekly") on:
                                                                @string.Join(", ", allDays.Select(d => d.ToString()))
                                                            </div>
                                                        }
                                                        else if (schedule.RecurrenceDayOfWeek.HasValue)
                                                        {
                                                            <div>
                                                                @(schedule.RecurrencePattern == "Weekly" ? "Every" : "Bi-weekly on") @((DayOfWeek)schedule.RecurrenceDayOfWeek.Value)
                                                            </div>
                                                        }
                                                    }
                                                    else if (schedule.RecurrencePattern == "Monthly" && schedule.RecurrenceDayOfMonth.HasValue)
                                                    {
                                                        <div>Monthly on day @schedule.RecurrenceDayOfMonth</div>
                                                    }
                                                    else
                                                    {
                                                        <div>@schedule.RecurrencePattern</div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div>One-time</div>
                                                }
                                            </td>
                                            <td>
                                                <div>@schedule.ScheduledDateTime?.ToString("MMM dd, yyyy")</div>
                                                <small>@schedule.ScheduledDateTime?.ToString("h:mm tt")</small>
                                            </td>
                                            <td>
                                                @if (schedule.IsActive)
                                                {
                                                    <span class="badge rounded-pill bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge rounded-pill bg-secondary">Paused</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="d-flex gap-1">
                                                    <button type="button" class="btn btn-sm btn-outline-primary" 
                                                            data-bs-toggle="modal" data-bs-target="#editScheduleModal"
                                                            data-schedule-id="@schedule.WorkoutScheduleId"
                                                            data-name="@schedule.Name"
                                                            data-description="@schedule.Description"
                                                            data-date="@schedule.ScheduledDateTime?.ToString("yyyy-MM-dd")"
                                                            data-time="@schedule.ScheduledDateTime?.ToString("HH:mm")"
                                                            data-enddate="@(schedule.EndDate?.ToString("yyyy-MM-dd") ?? "")"
                                                            data-reminder="@schedule.SendReminder.ToString().ToLower()"
                                                            data-reminder-hours="@schedule.ReminderHoursBefore">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <form method="post" asp-page-handler="ToggleSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <input type="hidden" name="isActive" value="@(!schedule.IsActive)" />
                                                        <button type="submit" class="btn btn-sm @(schedule.IsActive ? "btn-outline-warning" : "btn-outline-success")" 
                                                                title="@(schedule.IsActive ? "Pause" : "Activate")">
                                                            <i class="bi @(schedule.IsActive ? "bi-pause-fill" : "bi-play-fill")"></i>
                                                        </button>
                                                    </form>
                                                    <form method="post">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                formaction="/Coach/ScheduledWorkouts?handler=DeleteSchedule"
                                                                onclick="return confirm('Are you sure you want to delete this scheduled workout?');">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">No upcoming scheduled workouts found.</p>
                            @if (Model.IsClientView)
                            {
                                <button type="button" class="btn btn-primary mt-2" data-bs-toggle="modal" data-bs-target="#scheduleWorkoutModal">
                                    <i class="bi bi-plus"></i> Schedule a Workout
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model.CompletedSchedules.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Completed Workouts</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover" id="completedSchedulesTable">
                                <thead>
                                    <tr>
                                        @if (!Model.IsClientView)
                                        {
                                            <th>Client</th>
                                        }
                                        <th>Workout</th>
                                        <th>Schedule</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var schedule in Model.CompletedSchedules)
                                    {
                                        <tr>
                                            @if (!Model.IsClientView)
                                            {
                                                <td>
                                                    <a asp-page="./Clients/AssignedWorkouts" asp-route-clientId="@schedule.ClientUserId">
                                                        @schedule.ClientName
                                                    </a>
                                                </td>
                                            }
                                            <td>
                                                <div>@schedule.Name</div>
                                                <small class="text-muted">@(schedule.TemplateName ?? "Custom")</small>
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    <div>@schedule.RecurrencePattern</div>
                                                }
                                                else
                                                {
                                                    <div>One-time</div>
                                                }
                                            </td>
                                            <td>
                                                <div>@schedule.ScheduledDateTime?.ToString("MMM dd, yyyy")</div>
                                                <small>@schedule.ScheduledDateTime?.ToString("h:mm tt")</small>
                                            </td>
                                            <td>
                                                <form method="post">
                                                    <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                            formaction="/Coach/ScheduledWorkouts?handler=DeleteSchedule"
                                                            onclick="return confirm('Are you sure you want to delete this scheduled workout record?');">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Schedule Workout Modal -->
@if (Model.IsClientView)
{
    <div class="modal fade" id="scheduleWorkoutModal" tabindex="-1" aria-labelledby="scheduleWorkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="scheduleWorkoutModalLabel">Schedule Workout for @Model.Client?.Name</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-page-handler="ScheduleWorkout">
                    <div class="modal-body">
                        <input type="hidden" name="clientId" value="@Model.ClientId" />
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Workout Source</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="workoutSource" id="sourceTemplate" value="template" checked>
                                    <label class="form-check-label" for="sourceTemplate">
                                        Use Template
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="workoutSource" id="sourceAssignment" value="assignment" 
                                           @(Model.AvailableAssignments.Any() ? "" : "disabled")>
                                    <label class="form-check-label" for="sourceAssignment">
                                        Use Template Assignment
                                        @if (!Model.AvailableAssignments.Any())
                                        {
                                            <small class="text-muted">(No assignments available)</small>
                                        }
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <div id="templateSelection" class="mb-3">
                            <label for="templateId" class="form-label">Select Template</label>
                            <select class="form-select" id="templateId" name="templateId">
                                @foreach (var template in Model.AvailableTemplates)
                                {
                                    <option value="@template.WorkoutTemplateId">@template.Name</option>
                                }
                            </select>
                        </div>
                        
                        <div id="assignmentSelection" class="mb-3 d-none">
                            <label for="assignmentId" class="form-label">Select Assignment</label>
                            <select class="form-select" id="assignmentId" name="assignmentId" 
                                    @(Model.AvailableAssignments.Any() ? "" : "disabled")>
                                @foreach (var assignment in Model.AvailableAssignments)
                                {
                                    <option value="@assignment.TemplateAssignmentId">@assignment.Name (@assignment.WorkoutTemplate.Name)</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="name" class="form-label">Workout Name</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Description (Optional)</label>
                            <textarea class="form-control" id="description" name="description" rows="2"></textarea>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="startDate" class="form-label">Date</label>
                                <input type="date" class="form-control" id="startDate" name="startDate" required>
                            </div>
                            <div class="col-md-6">
                                <label for="workoutTime" class="form-label">Time</label>
                                <input type="time" class="form-control" id="workoutTime" name="workoutTime" required>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Recurrence Pattern</label>
                            <div class="d-flex flex-wrap gap-2">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceOnce" value="Once" checked />
                                    <label class="form-check-label" for="recurrenceOnce">One-time</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceWeekly" value="Weekly" />
                                    <label class="form-check-label" for="recurrenceWeekly">Weekly</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceBiWeekly" value="BiWeekly" />
                                    <label class="form-check-label" for="recurrenceBiWeekly">Bi-Weekly</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceMonthly" value="Monthly" />
                                    <label class="form-check-label" for="recurrenceMonthly">Monthly</label>
                                </div>
                            </div>
                        </div>

                        <div id="weeklyOptions" class="mb-3 d-none">
                            <label class="form-label">Day of Week</label>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                                {
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="daysOfWeek" id="day@(day)" value="@day" />
                                        <label class="form-check-label" for="day@(day)">@day</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div id="monthlyOptions" class="mb-3 d-none">
                            <label for="dayOfMonth" class="form-label">Day of Month</label>
                            <select class="form-select" id="dayOfMonth" name="dayOfMonth">
                                @for (int i = 1; i <= 31; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>

                        <div id="endDateContainer" class="mb-3 d-none">
                            <label for="endDate" class="form-label">End Date (Optional)</label>
                            <input type="date" class="form-control" id="endDate" name="endDate">
                        </div>

                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="sendReminder" name="sendReminder" value="true" checked>
                            <label class="form-check-label" for="sendReminder">Send reminder</label>
                        </div>

                        <div id="reminderOptions">
                            <div class="mb-3">
                                <label for="reminderHoursBefore" class="form-label">Reminder Hours Before</label>
                                <select class="form-select" id="reminderHoursBefore" name="reminderHoursBefore">
                                    <option value="1">1 hour</option>
                                    <option value="3" selected>3 hours</option>
                                    <option value="12">12 hours</option>
                                    <option value="24">24 hours</option>
                                    <option value="48">2 days</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Schedule Workout</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<!-- Edit Schedule Modal -->
<div class="modal fade" id="editScheduleModal" tabindex="-1" aria-labelledby="editScheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editScheduleModalLabel">Edit Scheduled Workout</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="EditSchedule">
                <div class="modal-body">
                    <input type="hidden" id="editScheduleId" name="scheduleId" />
                    
                    <div class="mb-3">
                        <label for="editName" class="form-label">Workout Name</label>
                        <input type="text" class="form-control" id="editName" name="name" required>
                    </div>

                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description (Optional)</label>
                        <textarea class="form-control" id="editDescription" name="description" rows="2"></textarea>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editScheduleDate" class="form-label">Date</label>
                            <input type="date" class="form-control" id="editScheduleDate" name="scheduleDate" required>
                        </div>
                        <div class="col-md-6">
                            <label for="editScheduleTime" class="form-label">Time</label>
                            <input type="time" class="form-control" id="editScheduleTime" name="scheduleTime" required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="editEndDate" class="form-label">End Date (for recurring workouts)</label>
                        <input type="date" class="form-control" id="editEndDate" name="endDate">
                    </div>

                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="editSendReminder" name="sendReminder" value="true">
                        <label class="form-check-label" for="editSendReminder">Send reminder</label>
                    </div>

                    <div id="editReminderOptions">
                        <div class="mb-3">
                            <label for="editReminderHoursBefore" class="form-label">Reminder Hours Before</label>
                            <select class="form-select" id="editReminderHoursBefore" name="reminderHoursBefore">
                                <option value="1">1 hour</option>
                                <option value="3">3 hours</option>
                                <option value="12">12 hours</option>
                                <option value="24">24 hours</option>
                                <option value="48">2 days</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTables
            $('#upcomingSchedulesTable').DataTable({
                "order": [[2, 'asc']],
                "pageLength": 10,
                "responsive": true
            });
            
            $('#completedSchedulesTable').DataTable({
                "order": [[2, 'desc']],
                "pageLength": 5,
                "responsive": true
            });
            
            // Show/hide workout source selections
            $('input[name="workoutSource"]').on('change', function() {
                if ($(this).val() === 'template') {
                    $('#templateSelection').removeClass('d-none');
                    $('#assignmentSelection').addClass('d-none');
                } else {
                    $('#templateSelection').addClass('d-none');
                    $('#assignmentSelection').removeClass('d-none');
                }
            });
            
            // Handle recurrence pattern changes
            $('input[name="recurrencePattern"]').on('change', function() {
                var pattern = $(this).val();
                
                // Reset other options
                $('#weeklyOptions').addClass('d-none');
                $('#monthlyOptions').addClass('d-none');
                
                // Show relevant options based on pattern
                if (pattern === 'Weekly' || pattern === 'BiWeekly') {
                    $('#weeklyOptions').removeClass('d-none');
                    $('#endDateContainer').removeClass('d-none');
                } else if (pattern === 'Monthly') {
                    $('#monthlyOptions').removeClass('d-none');
                    $('#endDateContainer').removeClass('d-none');
                    
                    // Set default day of month to today's date
                    var dayOfMonth = new Date().getDate();
                    $('#dayOfMonth').val(dayOfMonth);
                } else {
                    $('#endDateContainer').addClass('d-none');
                }
            });
            
            // Set default start date to today
            var today = new Date();
            var formattedDate = today.toISOString().split('T')[0];
            $('#startDate').val(formattedDate);
            
            // Set default time to 5:00 PM
            $('#workoutTime').val('17:00');
            
            // Toggle reminder options
            $('#sendReminder').on('change', function() {
                if ($(this).prop('checked')) {
                    $('#reminderOptions').removeClass('d-none');
                } else {
                    $('#reminderOptions').addClass('d-none');
                }
            });
            
            // Edit schedule modal
            $('#editScheduleModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget);
                var scheduleId = button.data('schedule-id');
                var name = button.data('name');
                var description = button.data('description');
                var date = button.data('date');
                var time = button.data('time');
                var endDate = button.data('enddate');
                var reminder = button.data('reminder') === 'true';
                var reminderHours = button.data('reminder-hours');
                
                var modal = $(this);
                modal.find('#editScheduleId').val(scheduleId);
                modal.find('#editName').val(name);
                modal.find('#editDescription').val(description);
                modal.find('#editScheduleDate').val(date);
                modal.find('#editScheduleTime').val(time);
                modal.find('#editEndDate').val(endDate);
                modal.find('#editSendReminder').prop('checked', reminder);
                modal.find('#editReminderHoursBefore').val(reminderHours);
                
                // Show/hide reminder options based on reminder checkbox
                if (reminder) {
                    $('#editReminderOptions').removeClass('d-none');
                } else {
                    $('#editReminderOptions').addClass('d-none');
                }
            });
            
            // Toggle edit reminder options
            $('#editSendReminder').on('change', function() {
                if ($(this).prop('checked')) {
                    $('#editReminderOptions').removeClass('d-none');
                } else {
                    $('#editReminderOptions').addClass('d-none');
                }
            });
        });
    </script>
}