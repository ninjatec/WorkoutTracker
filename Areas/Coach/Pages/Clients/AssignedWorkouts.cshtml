@page
@model WorkoutTrackerWeb.Areas.Coach.Pages.Clients.AssignedWorkoutsModel
@{
    ViewData["Title"] = "Assigned Workouts";
    var client = Model.Client;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Workouts for @client.Name</h1>
        <div>
            <a asp-page="./AssignWorkout" asp-route-clientId="@Model.ClientId" class="btn btn-primary">
                <i class="fas fa-plus"></i> Assign Workout
            </a>
            <button type="button" class="btn btn-success" data-bs-toggle="collapse" data-bs-target="#scheduleWorkoutAccordion" aria-expanded="false" aria-controls="scheduleWorkoutAccordion">
                <i class="fas fa-calendar-plus"></i> Schedule Workout
            </button>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Schedule Workout Accordion -->
    <div class="collapse mb-4" id="scheduleWorkoutAccordion">
        <div class="card shadow">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">Schedule Workout</h5>
            </div>
            <div class="card-body">
                <form method="post" asp-page-handler="ScheduleWorkout" id="scheduleWorkoutForm">
                    <input type="hidden" id="clientIdInput" name="clientId" value="@Model.ClientId" />
                    <input type="hidden" id="templateIdInput" name="templateId" value="" />
                    <input type="hidden" id="assignmentIdInput" name="assignmentId" value="" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="scheduleName" class="form-label">Schedule Name</label>
                                <input type="text" class="form-control" id="scheduleName" name="name" required />
                            </div>
                            
                            <div class="mb-3">
                                <label for="scheduleDescription" class="form-label">Description</label>
                                <textarea class="form-control" id="scheduleDescription" name="description" rows="2"></textarea>
                            </div>
                            
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="scheduleDate" class="form-label">Date</label>
                                    <input type="date" class="form-control" id="scheduleDate" name="scheduleDate" required />
                                </div>
                                <div class="col-md-6">
                                    <label for="scheduleTime" class="form-label">Time</label>
                                    <input type="time" class="form-control" id="scheduleTime" name="scheduleTime" value="17:00" required />
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="endDate" class="form-label">End Date (optional for recurring)</label>
                                <input type="date" class="form-control" id="endDate" name="endDate" />
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Recurrence</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" value="Once" id="recurrenceOnce" checked 
                                           onchange="toggleRecurrenceOptions()" />
                                    <label class="form-check-label" for="recurrenceOnce">
                                        One-time workout
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" value="Daily" id="recurrenceDaily" 
                                           onchange="toggleRecurrenceOptions()" />
                                    <label class="form-check-label" for="recurrenceDaily">
                                        Daily
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" value="Weekly" id="recurrenceWeekly" 
                                           onchange="toggleRecurrenceOptions()" />
                                    <label class="form-check-label" for="recurrenceWeekly">
                                        Weekly
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" value="BiWeekly" id="recurrenceBiWeekly" 
                                           onchange="toggleRecurrenceOptions()" />
                                    <label class="form-check-label" for="recurrenceBiWeekly">
                                        Bi-Weekly
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="recurrencePattern" value="Monthly" id="recurrenceMonthly" 
                                           onchange="toggleRecurrenceOptions()" />
                                    <label class="form-check-label" for="recurrenceMonthly">
                                        Monthly
                                    </label>
                                </div>
                            </div>
                            
                            <div id="weeklyOptions" class="mb-3" style="display: none;">
                                <label class="form-label">Days of Week</label>
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                                    {
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="checkbox" name="daysOfWeek" id="day@(day)" value="@day" />
                                            <label class="form-check-label" for="day@(day)">@day</label>
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            <div id="monthlyOptions" class="mb-3" style="display: none;">
                                <label for="dayOfMonth" class="form-label">Day of Month</label>
                                <select id="dayOfMonth" name="dayOfMonth" class="form-select">
                                    @for (int i = 1; i <= 31; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                            </div>
                            
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="sendReminder" name="sendReminder" value="true" checked 
                                       onchange="toggleReminderOptions()" />
                                <label class="form-check-label" for="sendReminder">
                                    Send workout reminders
                                </label>
                            </div>
                            
                            <div id="reminderOptions" class="mb-3">
                                <label for="reminderHoursBefore" class="form-label">Hours Before Workout</label>
                                <select id="reminderHoursBefore" name="reminderHoursBefore" class="form-select">
                                    <option value="1">1 hour</option>
                                    <option value="2">2 hours</option>
                                    <option value="3" selected>3 hours</option>
                                    <option value="6">6 hours</option>
                                    <option value="12">12 hours</option>
                                    <option value="24">24 hours</option>
                                    <option value="48">48 hours</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary me-2" data-bs-toggle="collapse" data-bs-target="#scheduleWorkoutAccordion">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-success">Schedule Workout</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Scheduled Workouts</h5>
                </div>
                <div class="card-body">
                    @if (Model.WorkoutSchedules.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Workout</th>
                                        <th>Template</th>
                                        <th>Schedule</th>
                                        <th>Next Occurrence</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var schedule in Model.WorkoutSchedules)
                                    {
                                        <tr>
                                            <td>@schedule.Name</td>
                                            <td>
                                                @if (schedule.TemplateAssignmentId.HasValue)
                                                {
                                                    <span>Assignment: <a href="#" class="text-primary" data-bs-toggle="modal" data-bs-target="#viewAssignmentModal" 
                                                                        data-assignment-id="@schedule.TemplateAssignmentId">@schedule.TemplateAssignmentName</a></span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No template</span>
                                                }
                                            </td>
                                            <td>
                                                @if (schedule.IsRecurring)
                                                {
                                                    @if (schedule.RecurrencePattern == "Weekly" || schedule.RecurrencePattern == "BiWeekly")
                                                    {
                                                        var allDays = schedule.GetAllDaysOfWeek();
                                                        if (allDays.Count > 0)
                                                        {
                                                            <div>
                                                                @(schedule.RecurrencePattern == "Weekly" ? "Weekly" : "Bi-weekly") on:
                                                                @string.Join(", ", allDays.Select(d => d.ToString()))
                                                            </div>
                                                        }
                                                        else if (schedule.RecurrenceDayOfWeekInt.HasValue)
                                                        {
                                                            <div>
                                                                @(schedule.RecurrencePattern == "Weekly" ? "Every" : "Bi-weekly on") 
                                                                @((DayOfWeek)schedule.RecurrenceDayOfWeekInt.Value)
                                                            </div>
                                                        }
                                                    }
                                                    else if (schedule.RecurrencePattern == "Monthly" && schedule.RecurrenceDayOfMonth.HasValue)
                                                    {
                                                        <div>Monthly on day @schedule.RecurrenceDayOfMonth</div>
                                                    }
                                                    else
                                                    {
                                                        <div>@schedule.RecurrencePattern</div>
                                                    }
                                                }
                                                else
                                                {
                                                    <span>One-time</span>
                                                }
                                            </td>
                                            <td>
                                                @if (schedule.ScheduledDateTime.HasValue)
                                                {
                                                    <div>@schedule.ScheduledDateTime.Value.ToString("MMM dd, yyyy")</div>
                                                    <div>@schedule.ScheduledDateTime.Value.ToString("h:mm tt")</div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not scheduled</span>
                                                }
                                            </td>
                                            <td>
                                                @if (schedule.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <a asp-page="./EditSchedule" asp-route-clientId="@Model.ClientId" asp-route-scheduleId="@schedule.WorkoutScheduleId" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <form method="post" asp-page-handler="ToggleSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <input type="hidden" name="isActive" value="@(!schedule.IsActive)" />
                                                        <button type="submit" class="btn btn-sm @(schedule.IsActive ? "btn-outline-warning" : "btn-outline-success")">
                                                            <i class="fas fa-@(schedule.IsActive ? "pause" : "play")"></i>
                                                        </button>
                                                    </form>
                                                    <form method="post" asp-page-handler="DeleteSchedule" class="d-inline">
                                                        <input type="hidden" name="scheduleId" value="@schedule.WorkoutScheduleId" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                onclick="return confirm('Are you sure you want to delete this scheduled workout?');">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">No workouts scheduled for this client yet.</p>
                            <button type="button" class="btn btn-primary mt-2" data-bs-toggle="collapse" data-bs-target="#scheduleWorkoutAccordion">
                                <i class="fas fa-calendar-plus"></i> Schedule a Workout
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">Assigned Workout Templates</h5>
                </div>
                <div class="card-body">
                    @if (Model.TemplateAssignments.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Template</th>
                                        <th>Assigned On</th>
                                        <th>Status</th>
                                        <th>Progress</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var assignment in Model.TemplateAssignments)
                                    {
                                        <tr>
                                            <td>
                                                <div>@assignment.TemplateName</div>
                                                <small class="text-muted">@assignment.Name</small>
                                            </td>
                                            <td>@assignment.CreatedDate.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                @if (assignment.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                @* Progress UI - will need to be implemented later *@
                                                <span class="text-muted">Not tracked</span>
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <a href="#" class="btn btn-sm btn-outline-primary" 
                                                       data-bs-toggle="modal" data-bs-target="#viewAssignmentModal"
                                                       data-assignment-id="@assignment.TemplateAssignmentId">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <form method="post" asp-page-handler="ToggleActive" class="d-inline">
                                                        <input type="hidden" name="assignmentId" value="@assignment.TemplateAssignmentId" />
                                                        <input type="hidden" name="isActive" value="@(!assignment.IsActive)" />
                                                        <button type="submit" class="btn btn-sm @(assignment.IsActive ? "btn-outline-warning" : "btn-outline-success")">
                                                            <i class="fas fa-@(assignment.IsActive ? "pause" : "play")"></i>
                                                        </button>
                                                    </form>
                                                    <button type="button" class="btn btn-sm btn-outline-success" 
                                                            onclick="populateScheduleForm('@assignment.WorkoutTemplateId', '@assignment.TemplateName', '@assignment.TemplateAssignmentId')">
                                                        <i class="fas fa-calendar-plus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">No workout templates assigned to this client yet.</p>
                            <a asp-page="./AssignWorkout" asp-route-clientId="@Model.ClientId" class="btn btn-primary mt-2">
                                <i class="fas fa-plus"></i> Assign Workout Template
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Set default schedule date to today
    document.addEventListener('DOMContentLoaded', function() {
        const today = new Date();
        const formattedDate = today.toISOString().split('T')[0];
        document.getElementById('scheduleDate').value = formattedDate;
        
        // Set default day of week checkbox to current day
        const currentDayOfWeek = today.getDay();
        const currentDayCheckbox = document.getElementById(`day${currentDayOfWeek}`);
        if (currentDayCheckbox) {
            currentDayCheckbox.checked = true;
        }
        
        // Set default day of month to current day
        document.getElementById('dayOfMonth').value = today.getDate();
    });
    
    // Toggle recurrence options based on selected pattern
    function toggleRecurrenceOptions() {
        const pattern = document.querySelector('input[name="recurrencePattern"]:checked').value;
        const weeklyOptions = document.getElementById('weeklyOptions');
        const monthlyOptions = document.getElementById('monthlyOptions');
        const endDate = document.getElementById('endDate');
        
        // Hide all options first
        weeklyOptions.style.display = 'none';
        monthlyOptions.style.display = 'none';
        
        // Show relevant options based on selection
        if (pattern === 'Weekly' || pattern === 'BiWeekly') {
            weeklyOptions.style.display = 'block';
        } else if (pattern === 'Monthly') {
            monthlyOptions.style.display = 'block';
        }
        
        // Enable/disable end date based on recurrence
        if (pattern === 'Once') {
            endDate.disabled = true;
        } else {
            endDate.disabled = false;
        }
    }
    
    // Toggle reminder options
    function toggleReminderOptions() {
        const sendReminder = document.getElementById('sendReminder').checked;
        const reminderOptions = document.getElementById('reminderOptions');
        
        reminderOptions.style.display = sendReminder ? 'block' : 'none';
    }
    
    // Function to populate schedule form and show accordion
    function populateScheduleForm(templateId, templateName, assignmentId) {
        // Populate form fields
        document.getElementById('templateIdInput').value = templateId || '';
        document.getElementById('assignmentIdInput').value = assignmentId || '';
        
        if (templateName) {
            const today = new Date();
            const formattedDate = today.toLocaleDateString();
            document.getElementById('scheduleName').value = `${templateName} - ${formattedDate}`;
        }
        
        // Show the accordion
        const scheduleAccordion = document.getElementById('scheduleWorkoutAccordion');
        const bsCollapse = new bootstrap.Collapse(scheduleAccordion, { toggle: true });
        
        // Scroll to accordion
        scheduleAccordion.scrollIntoView({ behavior: 'smooth' });
    }
    
    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
        toggleRecurrenceOptions();
        toggleReminderOptions();
    });
</script>
}