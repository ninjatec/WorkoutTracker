@page "{id:int}"
@model WorkoutTrackerWeb.Areas.Coach.Pages.Clients.GroupModel
@{
    ViewData["Title"] = "Manage Client Group";
    Layout = "_Layout";
}

<div class="row mb-4">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center">
            <h4><i class="bi bi-people-fill me-2"></i>@Model.GroupName</h4>
            <div>
                <a asp-page="./Index" class="btn btn-outline-secondary me-2">
                    <i class="bi bi-arrow-left me-1"></i>Back to Clients
                </a>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editGroupModal">
                    <i class="bi bi-pencil me-1"></i>Edit Group
                </button>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    var statusClass = Model.StatusMessageType == "Success" ? "success" : Model.StatusMessageType == "Info" ? "info" : "danger";
    <div class="alert alert-@statusClass alert-dismissible fade show" role="alert">
        @Model.StatusMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="mb-0">Group Details</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Name</dt>
                    <dd class="col-sm-8">@Model.GroupName</dd>
                    
                    <dt class="col-sm-4">Description</dt>
                    <dd class="col-sm-8">@Model.GroupDescription</dd>
                    
                    <dt class="col-sm-4">Created</dt>
                    <dd class="col-sm-8">@Model.CreatedDate?.ToString("MMM d, yyyy")</dd>
                    
                    <dt class="col-sm-4">Members</dt>
                    <dd class="col-sm-8">@Model.MemberCount</dd>
                </dl>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Group Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#assignWorkoutModal">
                        <i class="bi bi-calendar-plus me-2"></i>Assign Template to Group
                    </button>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMembersModal">
                        <i class="bi bi-person-plus me-2"></i>Add Members
                    </button>
                    <form method="post" asp-page-handler="DeleteGroup" onsubmit="return confirm('Are you sure you want to delete this group? This action cannot be undone.');">
                        <input type="hidden" name="groupId" value="@Model.GroupId" />
                        <button type="submit" class="btn btn-danger w-100">
                            <i class="bi bi-trash me-2"></i>Delete Group
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Group Members</h5>
                <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#addMembersModal">
                    <i class="bi bi-person-plus me-1"></i>Add Members
                </button>
            </div>
            <div class="card-body">
                @if (Model.Members.Any())
                {
                    <div class="mb-3 d-flex justify-content-between align-items-center">
                        <div class="input-group w-50">
                            <input type="text" id="memberSearch" class="form-control" placeholder="Search members..." aria-label="Search members">
                            <button class="btn btn-outline-secondary" type="button" id="clearSearch">
                                <i class="bi bi-x"></i>
                            </button>
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-sort-alpha-down me-1"></i>Sort by
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                                <li><a class="dropdown-item sort-option" href="#" data-sort="name-asc">Name (A-Z)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="name-desc">Name (Z-A)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="date-asc">Date Added (Oldest)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="date-desc">Date Added (Newest)</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover" id="membersTable">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Added Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var member in Model.Members)
                                {
                                    <tr class="member-row" data-name="@member.Name.ToLower()" data-email="@member.Email.ToLower()" data-date="@(member.AddedDate?.ToString("yyyy-MM-dd") ?? "")">
                                        <td>
                                            <a asp-page="./Details" asp-route-id="@member.ClientRelationshipId">@member.Name</a>
                                        </td>
                                        <td>@member.Email</td>
                                        <td>@member.AddedDate?.ToString("MMM d, yyyy")</td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-page="./Details" asp-route-id="@member.ClientRelationshipId" class="btn btn-sm btn-outline-primary" title="View client details">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <form method="post" asp-page-handler="RemoveMember" class="d-inline">
                                                    <input type="hidden" name="relationshipId" value="@member.ClientRelationshipId" />
                                                    <input type="hidden" name="groupId" value="@Model.GroupId" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Remove from group">
                                                        <i class="bi bi-person-dash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div id="noMatchesMessage" class="alert alert-info mt-3 d-none">
                        No members match your search criteria.
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>This group doesn't have any members yet.
                        <p class="mt-2">Use the 'Add Members' button to add clients to this group.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Edit Group Modal -->
<div class="modal fade" id="editGroupModal" tabindex="-1" aria-labelledby="editGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="UpdateGroup">
                <div class="modal-header">
                    <h5 class="modal-title" id="editGroupModalLabel">Edit Group Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="groupId" value="@Model.GroupId" />
                    
                    <div class="mb-3">
                        <label for="groupName" class="form-label">Group Name</label>
                        <input type="text" class="form-control" id="groupName" name="groupName" value="@Model.GroupName" required maxlength="100">
                        <div class="invalid-feedback">
                            Group name is required and must be less than 100 characters.
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="groupDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="groupDescription" name="groupDescription" rows="3" maxlength="500">@Model.GroupDescription</textarea>
                        <div class="form-text">Maximum 500 characters.</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="colorCode" class="form-label">Group Color</label>
                        <select class="form-select" id="colorCode" name="colorCode">
                            <option value="#0d6efd" @(Model.ColorCode == "#0d6efd" ? "selected" : "")>Blue</option>
                            <option value="#198754" @(Model.ColorCode == "#198754" ? "selected" : "")>Green</option>
                            <option value="#dc3545" @(Model.ColorCode == "#dc3545" ? "selected" : "")>Red</option>
                            <option value="#ffc107" @(Model.ColorCode == "#ffc107" ? "selected" : "")>Yellow</option>
                            <option value="#6610f2" @(Model.ColorCode == "#6610f2" ? "selected" : "")>Purple</option>
                            <option value="#fd7e14" @(Model.ColorCode == "#fd7e14" ? "selected" : "")>Orange</option>
                            <option value="#20c997" @(Model.ColorCode == "#20c997" ? "selected" : "")>Teal</option>
                            <option value="#6c757d" @(Model.ColorCode == "#6c757d" ? "selected" : "")>Gray</option>
                        </select>
                        <div class="form-text">This color will be used to identify the group in the client list.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Members Modal -->
<div class="modal fade" id="addMembersModal" tabindex="-1" aria-labelledby="addMembersModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddMembers" id="addMembersForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMembersModalLabel">Add Members to Group</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="groupId" value="@Model.GroupId" />
                    
                    <div class="mb-3">
                        <div class="input-group mb-3">
                            <input type="text" id="clientSearch" class="form-control" placeholder="Search clients..." aria-label="Search clients">
                            <button class="btn btn-outline-secondary" type="button" id="clearClientSearch">
                                <i class="bi bi-x"></i>
                            </button>
                        </div>
                        <label class="form-label">Select Clients to Add</label>
                        <div class="form-check client-list" style="max-height: 300px; overflow-y: auto;">
                            @if (Model.AvailableClients.Any())
                            {
                                <div class="d-flex justify-content-end mb-2">
                                    <button type="button" class="btn btn-sm btn-link" id="selectAllClients">Select All</button>
                                    <button type="button" class="btn btn-sm btn-link ms-2" id="deselectAllClients">Deselect All</button>
                                </div>
                                @foreach (var client in Model.AvailableClients)
                                {
                                    <div class="form-check mb-2 client-item" data-name="@client.Name.ToLower()" data-email="@client.Email.ToLower()">
                                        <input class="form-check-input client-checkbox" type="checkbox" id="client@(client.RelationshipId)" name="selectedClients" value="@client.RelationshipId">
                                        <label class="form-check-label" for="client@(client.RelationshipId)">
                                            @client.Name (@client.Email)
                                        </label>
                                    </div>
                                }
                                <div id="noClientsMessage" class="alert alert-info mt-3 d-none">
                                    No clients match your search criteria.
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    No more clients available to add to this group.
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success" id="addMembersButton" @(Model.AvailableClients.Any() ? "" : "disabled")>Add to Group</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Assign Template Modal -->
<div class="modal fade" id="assignWorkoutModal" tabindex="-1" aria-labelledby="assignWorkoutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AssignTemplate" id="assignTemplateForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignWorkoutModalLabel">Assign Template to Group</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="groupId" value="@Model.GroupId" />
                    
                    <div class="mb-3">
                        <label for="templateId" class="form-label">Select Template</label>
                        <select class="form-select" id="templateId" name="templateId" required>
                            <option value="">-- Select Template --</option>
                            @foreach (var template in Model.AvailableTemplates)
                            {
                                <option value="@template.TemplateId">@template.Name @(template.IsOwner ? "" : "(Public)")</option>
                            }
                        </select>
                        <div class="invalid-feedback">
                            Please select a template.
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="assignmentName" class="form-label">Assignment Name</label>
                        <input type="text" class="form-control" id="assignmentName" name="assignmentName" required maxlength="100">
                        <small class="text-muted">A descriptive name for this assignment (e.g. "Summer Strength Program")</small>
                        <div class="invalid-feedback">
                            Assignment name is required.
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="3" maxlength="500"></textarea>
                        <div class="form-text">Maximum 500 characters.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Assign to Group</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Client-side validation
            function validateForm(formId) {
                const form = document.getElementById(formId);
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }
            
            $('#assignTemplateForm').on('submit', function(event) {
                validateForm('assignTemplateForm');
            });
            
            $('#addMembersForm').on('submit', function(event) {
                if ($('.client-checkbox:checked').length === 0) {
                    event.preventDefault();
                    alert('Please select at least one client to add to the group.');
                }
            });
            
            // Search functionality for members table
            $('#memberSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                let hasMatches = false;
                
                $('.member-row').each(function() {
                    const name = $(this).data('name');
                    const email = $(this).data('email');
                    
                    if (name.includes(searchTerm) || email.includes(searchTerm)) {
                        $(this).removeClass('d-none');
                        hasMatches = true;
                    } else {
                        $(this).addClass('d-none');
                    }
                });
                
                if (hasMatches) {
                    $('#noMatchesMessage').addClass('d-none');
                } else {
                    $('#noMatchesMessage').removeClass('d-none');
                }
            });
            
            $('#clearSearch').on('click', function() {
                $('#memberSearch').val('');
                $('.member-row').removeClass('d-none');
                $('#noMatchesMessage').addClass('d-none');
            });
            
            // Sorting functionality
            $('.sort-option').on('click', function(e) {
                e.preventDefault();
                const sortBy = $(this).data('sort');
                const rows = $('#membersTable tbody tr').get();
                
                rows.sort(function(a, b) {
                    let keyA, keyB;
                    
                    if (sortBy === 'name-asc' || sortBy === 'name-desc') {
                        keyA = $(a).data('name');
                        keyB = $(b).data('name');
                    } else if (sortBy === 'date-asc' || sortBy === 'date-desc') {
                        keyA = $(a).data('date') || '';
                        keyB = $(b).data('date') || '';
                    }
                    
                    if (sortBy === 'name-asc' || sortBy === 'date-asc') {
                        return keyA.localeCompare(keyB);
                    } else {
                        return keyB.localeCompare(keyA);
                    }
                });
                
                $.each(rows, function(index, row) {
                    $('#membersTable tbody').append(row);
                });
            });
            
            // Client search in add members modal
            $('#clientSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                let hasMatches = false;
                
                $('.client-item').each(function() {
                    const name = $(this).data('name');
                    const email = $(this).data('email');
                    
                    if (name.includes(searchTerm) || email.includes(searchTerm)) {
                        $(this).removeClass('d-none');
                        hasMatches = true;
                    } else {
                        $(this).addClass('d-none');
                    }
                });
                
                if (hasMatches) {
                    $('#noClientsMessage').addClass('d-none');
                } else {
                    $('#noClientsMessage').removeClass('d-none');
                }
            });
            
            $('#clearClientSearch').on('click', function() {
                $('#clientSearch').val('');
                $('.client-item').removeClass('d-none');
                $('#noClientsMessage').addClass('d-none');
            });
            
            // Select/Deselect all clients
            $('#selectAllClients').on('click', function() {
                $('.client-item:not(.d-none) .client-checkbox').prop('checked', true);
            });
            
            $('#deselectAllClients').on('click', function() {
                $('.client-checkbox').prop('checked', false);
            });
            
            // Initialize form validation
            $('#groupName, #assignmentName').on('input', function() {
                if ($(this).val().trim() !== '') {
                    $(this).removeClass('is-invalid');
                }
            });
        });
    </script>
}