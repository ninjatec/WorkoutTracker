@page
@model WorkoutTrackerWeb.Areas.Coach.Pages.Templates.IndexModel
@{
    ViewData["Title"] = "Workout Templates";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mt-4">Workout Templates</h1>
            <p class="lead">Manage your workout templates and assign them to clients</p>
        </div>
        <div>
            <a asp-page="Create" class="btn btn-primary">
                <i class="bi bi-plus-lg"></i> Create New Template
            </a>
        </div>
    </div>

    @await Component.InvokeAsync("TemplateFilters", Model.Filter)

    <div class="card mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover datatable" id="templatesTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Exercises</th>
                            <th>Created</th>
                            <th>Last Modified</th>
                            <th>Visibility</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var template in Model.WorkoutTemplates)
                        {
                            <tr data-category="@template.Category" data-public="@template.IsPublic.ToString().ToLower()">
                                <td>@template.Name</td>
                                <td>@template.Category</td>
                                <td>@template.ExerciseCount</td>
                                <td>@template.CreatedDate.ToShortDateString()</td>
                                <td>@template.LastModifiedDate.ToShortDateString()</td>
                                <td>
                                    @if (template.IsPublic)
                                    {
                                        <span class="badge bg-success">Public</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Private</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-page="./Edit" asp-route-id="@template.WorkoutTemplateId" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-page="./Details" asp-route-id="@template.WorkoutTemplateId" class="btn btn-sm btn-outline-info">
                                            <i class="bi bi-info-circle"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-success assign-template-btn" 
                                                data-bs-toggle="modal" data-bs-target="#assignTemplateModal"
                                                data-template-id="@template.WorkoutTemplateId" 
                                                data-template-name="@template.Name">
                                            <i class="bi bi-person-plus"></i>
                                        </button>
                                        <a asp-page="./Delete" asp-route-id="@template.WorkoutTemplateId" 
                                           class="btn btn-sm btn-outline-danger"
                                           onclick="return confirm('Are you sure you want to delete this template?');">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @if (!Model.WorkoutTemplates.Any())
            {
                <div class="alert alert-info">
                    <p class="mb-0">You haven't created any workout templates yet. Click the "Create New Template" button to get started.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Assign Template Modal -->
<div class="modal fade" id="assignTemplateModal" tabindex="-1" aria-labelledby="assignTemplateModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Assign">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignTemplateModalLabel">Assign Template to Client</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="templateId" name="templateId" />
                    
                    <div class="mb-3">
                        <label for="selectedTemplate" class="form-label">Template</label>
                        <input type="text" class="form-control" id="selectedTemplate" readonly />
                    </div>
                    
                    <div class="mb-3">
                        <label for="clientId" class="form-label">Client</label>
                        <select id="clientId" name="clientId" class="form-select" required>
                            <option value="">Select a client...</option>
                            @foreach (var client in Model.Clients)
                            {
                                <option value="@client.UserId">@client.Name</option>
                            }
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label for="name" class="form-label">Assignment Name</label>
                        <input type="text" class="form-control" id="name" name="name" required />
                        <small class="text-muted">A descriptive name for this assignment (e.g. "Summer Strength Program")</small>
                    </div>
                    
                    <div class="mb-3">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="3"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" name="startDate" required value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    </div>
                    
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" name="endDate" />
                        <small class="text-muted">Optional. Leave blank for an indefinite assignment.</small>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="scheduleWorkouts" name="scheduleWorkouts" value="true" />
                        <label class="form-check-label" for="scheduleWorkouts">
                            Schedule workouts based on this template
                        </label>
                    </div>
                    
                    <div id="schedulingOptions" class="border rounded p-3 mb-3 d-none">
                        <h6>Scheduling Options</h6>
                        
                        <div class="mb-3">
                            <label class="form-label">Frequency</label>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceOnce" value="Once" checked>
                                <label class="form-check-label" for="recurrenceOnce">
                                    One-time workout
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceWeekly" value="Weekly">
                                <label class="form-check-label" for="recurrenceWeekly">
                                    Weekly
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="recurrencePattern" id="recurrenceMonthly" value="Monthly">
                                <label class="form-check-label" for="recurrenceMonthly">
                                    Monthly
                                </label>
                            </div>
                        </div>
                        
                        <div id="weeklyDaysOptions" class="mb-3 d-none">
                            <label class="form-label">Days of Week</label>
                            <div class="d-flex flex-wrap">
                                @foreach (var day in new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" })
                                {
                                    <div class="form-check me-3">
                                        <input class="form-check-input" type="checkbox" name="daysOfWeek" id="day@(day)" value="@day">
                                        <label class="form-check-label" for="day@(day)">
                                            @day
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                        
                        <div id="monthlyDayOptions" class="mb-3 d-none">
                            <label for="dayOfMonth" class="form-label">Day of Month</label>
                            <select id="dayOfMonth" name="dayOfMonth" class="form-select">
                                @for (int i = 1; i <= 31; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label for="workoutTime" class="form-label">Workout Time</label>
                            <input type="time" class="form-control" id="workoutTime" name="workoutTime" value="17:00" />
                        </div>
                        
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="sendReminder" name="sendReminder" value="true" checked />
                            <label class="form-check-label" for="sendReminder">
                                Send workout reminders
                            </label>
                        </div>
                        
                        <div id="reminderOptions" class="mb-3">
                            <label for="reminderHoursBefore" class="form-label">Hours Before Workout</label>
                            <select id="reminderHoursBefore" name="reminderHoursBefore" class="form-select">
                                <option value="1">1 hour</option>
                                <option value="2">2 hours</option>
                                <option value="3" selected>3 hours</option>
                                <option value="6">6 hours</option>
                                <option value="12">12 hours</option>
                                <option value="24">24 hours</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Assign Template</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add proper handling for modals to fix accessibility issues
            const assignTemplateModal = document.getElementById('assignTemplateModal');
            assignTemplateModal.addEventListener('hidden.bs.modal', function () {
                // When hidden, add inert to avoid focus issues
                assignTemplateModal.setAttribute('inert', '');
            });
            assignTemplateModal.addEventListener('show.bs.modal', function () {
                // When shown, remove inert to allow focus
                assignTemplateModal.removeAttribute('inert');
            });
            // Set initial state to inert
            assignTemplateModal.setAttribute('inert', '');
            
            // Toggle scheduling options on checkbox change
            $('#scheduleWorkouts').on('change', function() {
                if ($(this).prop('checked')) {
                    $('#schedulingOptions').removeClass('d-none');
                } else {
                    $('#schedulingOptions').addClass('d-none');
                }
            });
            
            // Toggle recurrence pattern options
            $('input[name="recurrencePattern"]').on('change', function() {
                var pattern = $('input[name="recurrencePattern"]:checked').val();
                
                if (pattern === 'Weekly') {
                    $('#weeklyDaysOptions').removeClass('d-none');
                    $('#monthlyDayOptions').addClass('d-none');
                } else if (pattern === 'Monthly') {
                    $('#weeklyDaysOptions').addClass('d-none');
                    $('#monthlyDayOptions').removeClass('d-none');
                } else {
                    $('#weeklyDaysOptions').addClass('d-none');
                    $('#monthlyDayOptions').addClass('d-none');
                }
            });
            
            // Populate modal when opened
            $('.assign-template-btn').on('click', function() {
                var templateId = $(this).data('template-id');
                var templateName = $(this).data('template-name');
                
                $('#templateId').val(templateId);
                $('#selectedTemplate').val(templateName);
                $('#name').val(templateName);
            });
        });
    </script>
}