@page
@model WorkoutTrackerWeb.Areas.Coach.Pages.IndexModel
@{
    ViewData["Title"] = "Coach Dashboard";
}

<div class="row">
    <div class="col-md-12 mb-4">
        <div class="alert alert-info">
            <h5><i class="bi bi-info-circle"></i> Welcome to your Coach Dashboard</h5>
            <p>From here, you can manage your clients, create workout templates, set goals, and view analytics for your coaching business.</p>
        </div>
    </div>
</div>

<div class="row">
    <!-- Client Summary Card -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-people-fill me-2"></i>Clients Overview</h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h6 class="mb-0">Total Clients</h6>
                    <span class="badge bg-primary rounded-pill">@Model.TotalClients</span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h6 class="mb-0">Active Clients</h6>
                    <span class="badge bg-success rounded-pill">@Model.ActiveClients</span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h6 class="mb-0">Pending Invitations</h6>
                    <span class="badge bg-warning rounded-pill">@Model.PendingInvitations</span>
                </div>
                <div class="text-center mt-3">
                    <a href="/Coach/Clients/Index" class="btn btn-primary">Manage Clients</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity Card -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0"><i class="bi bi-activity me-2"></i>Recent Client Activity</h5>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentActivities.Any())
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var activity in Model.RecentActivities)
                        {
                            <li class="list-group-item">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@activity.ClientName</h6>
                                    <small>@activity.Date.ToString("MMM d, yyyy")</small>
                                </div>
                                <p class="mb-1">@activity.Description</p>
                                <small class="text-muted">@activity.Type</small>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="text-center p-4">
                        <p class="text-muted">No recent client activity to display.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Goals Progress Card -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0"><i class="bi bi-trophy me-2"></i>Client Goals Progress</h5>
            </div>
            <div class="card-body">
                <h6 class="mb-3 text-muted">Priority Goals (Upcoming)</h6>
                @if (Model.ClientGoals.Any())
                {
                    <div class="goal-analytics mb-3">
                        <div class="row text-center">
                            <div class="col">
                                <div class="analytics-item">
                                    <span class="analytics-value">@Model.ClientGoals.Count</span>
                                    <span class="analytics-label">Active Goals</span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="analytics-item">
                                    <span class="analytics-value">@Model.ClientGoals.Where(g => g.TargetDate < DateTime.Now.AddDays(7)).Count()</span>
                                    <span class="analytics-label">Due Soon</span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="analytics-item">
                                    <span class="analytics-value">@Model.ClientGoals.Average(g => g.Progress)%</span>
                                    <span class="analytics-label">Avg Progress</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @foreach (var goal in Model.ClientGoals)
                    {
                        <div class="goal-card mb-3">
                            <div class="goal-header d-flex justify-content-between align-items-center mb-1">
                                <div>
                                    <span class="fw-bold">@goal.ClientName</span>
                                    <span class="badge bg-secondary ms-2">@goal.Category</span>
                                </div>
                                <small class="text-@(goal.TargetDate < DateTime.Now ? "danger" : (goal.TargetDate < DateTime.Now.AddDays(7) ? "warning" : "muted"))">
                                    Due: @goal.TargetDate.ToString("MMM d")
                                </small>
                            </div>
                            <p class="goal-description mb-1">@goal.Description</p>
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <div class="goal-progress flex-grow-1 me-2">
                                    <div class="progress" style="height: 10px;">
                                        <div class="progress-bar @(goal.Progress >= 80 ? "bg-success" : goal.Progress >= 40 ? "bg-info" : "bg-warning")" 
                                             role="progressbar" 
                                             style="width: @goal.Progress%;" 
                                             aria-valuenow="@goal.Progress" 
                                             aria-valuemin="0" 
                                             aria-valuemax="100">
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <small>@goal.Progress%</small>
                                        @if (!string.IsNullOrEmpty(goal.MeasurementType))
                                        {
                                            <small>@goal.CurrentValue / @goal.TargetValue @goal.MeasurementUnit</small>
                                        }
                                    </div>
                                </div>
                                <div class="goal-actions">
                                    <div class="btn-group btn-group-sm">
                                        <a href="/Coach/Goals/UpdateProgress?goalId=@goal.Id" class="btn btn-outline-primary" title="Update Progress">
                                            <i class="bi bi-arrow-up-circle"></i>
                                        </a>
                                        <a href="/Coach/Goals/Edit?id=@goal.Id" class="btn btn-outline-secondary" title="Edit Goal">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-success" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#quickFeedbackModal"
                                                data-goal-id="@goal.Id"
                                                data-client-name="@goal.ClientName"
                                                data-goal-description="@goal.Description"
                                                title="Provide Feedback">
                                            <i class="bi bi-chat-dots"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center">
                        <p class="text-muted">No active goals to display.</p>
                    </div>
                }
                <div class="text-center mt-3">
                    <a href="/Coach/Goals/Index" class="btn btn-success">Manage Goals</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Upcoming Sessions Card -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header bg-warning text-white">
                <h5 class="mb-0"><i class="bi bi-calendar-check me-2"></i>Upcoming Sessions</h5>
            </div>
            <div class="card-body p-0">
                @if (Model.UpcomingSessions.Any())
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var session in Model.UpcomingSessions)
                        {
                            <li class="list-group-item">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@session.ClientName</h6>
                                    <small>@session.Date.ToString("MMM d, h:mm tt")</small>
                                </div>
                                <p class="mb-1">@session.Description</p>
                                @if (session.ScheduleId > 0)
                                {
                                    <div class="mt-1">
                                        <a href="/WorkoutSchedule/Details/@session.ScheduleId" class="btn btn-sm btn-outline-warning">
                                            <i class="bi bi-eye"></i> View Schedule
                                        </a>
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="text-center p-4">
                        <p class="text-muted">No upcoming sessions scheduled.</p>
                    </div>
                }
                <div class="text-center mt-3">
                    <a asp-area="Coach" asp-page="/ScheduledWorkouts" class="btn btn-warning">Manage Schedules</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick Goal Feedback Modal -->
<div class="modal fade" id="quickFeedbackModal" tabindex="-1" aria-labelledby="quickFeedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="quickFeedbackModalLabel">Provide Goal Feedback</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="SendGoalFeedback">
                <div class="modal-body">
                    <input type="hidden" id="feedbackGoalId" name="goalId" />
                    
                    <div class="mb-3">
                        <label class="fw-bold">Client:</label>
                        <p id="feedbackClientName"></p>
                    </div>
                    
                    <div class="mb-3">
                        <label class="fw-bold">Goal:</label>
                        <p id="feedbackGoalDescription"></p>
                    </div>
                    
                    <div class="mb-3">
                        <label for="feedbackType" class="form-label">Feedback Type</label>
                        <select class="form-select" id="feedbackType" name="feedbackType" required>
                            <option value="Encouragement">Encouragement</option>
                            <option value="Suggestion">Suggestion</option>
                            <option value="Reminder">Reminder</option>
                            <option value="Question">Question</option>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label for="feedbackMessage" class="form-label">Feedback Message</label>
                        <textarea class="form-control" id="feedbackMessage" name="feedbackMessage" rows="4" required></textarea>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="sendNotification" name="sendNotification" checked>
                        <label class="form-check-label" for="sendNotification">
                            Send notification to client
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Send Feedback</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle Quick Feedback Modal
            const quickFeedbackModal = document.getElementById('quickFeedbackModal');
            if (quickFeedbackModal) {
                quickFeedbackModal.addEventListener('show.bs.modal', function(event) {
                    // Button that triggered the modal
                    const button = event.relatedTarget;
                    
                    // Extract info from data attributes
                    const goalId = button.getAttribute('data-goal-id');
                    const clientName = button.getAttribute('data-client-name');
                    const goalDescription = button.getAttribute('data-goal-description');
                    
                    // Update the modal's content
                    document.getElementById('feedbackGoalId').value = goalId;
                    document.getElementById('feedbackClientName').textContent = clientName;
                    document.getElementById('feedbackGoalDescription').textContent = goalDescription;
                    
                    // Pre-fill with encouragement template
                    document.getElementById('feedbackMessage').value = `Keep up the great work on your "${goalDescription}" goal! You're making good progress.`;
                });
                
                // Change feedback message based on feedback type
                document.getElementById('feedbackType').addEventListener('change', function() {
                    const goalDescription = document.getElementById('feedbackGoalDescription').textContent;
                    const feedbackType = this.value;
                    const messageField = document.getElementById('feedbackMessage');
                    
                    // Set template message based on feedback type
                    switch(feedbackType) {
                        case 'Encouragement':
                            messageField.value = `Keep up the great work on your "${goalDescription}" goal! You're making good progress.`;
                            break;
                        case 'Suggestion':
                            messageField.value = `For your "${goalDescription}" goal, have you considered trying...`;
                            break;
                        case 'Reminder':
                            messageField.value = `Don't forget to track your progress on the "${goalDescription}" goal regularly.`;
                            break;
                        case 'Question':
                            messageField.value = `How are you feeling about your progress on the "${goalDescription}" goal?`;
                            break;
                    }
                });
            }
        });
    </script>
}