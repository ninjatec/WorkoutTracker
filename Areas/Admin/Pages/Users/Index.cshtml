@page
@model WorkoutTrackerWeb.Areas.Admin.Pages.Users.IndexModel
@{
    ViewData["Title"] = "User Management";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>User Management</h1>
        <a asp-page="./Create" class="btn btn-success">
            <i class="bi bi-person-plus"></i> Create New User
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <form method="get" class="row g-2">
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" name="searchString" value="@Model.CurrentFilter" class="form-control" 
                               placeholder="Search by email or username..." />
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-3">
                    <select name="roleFilter" asp-for="RoleFilter" asp-items="Model.RoleFilterOptions" 
                            class="form-select" onchange="this.form.submit()">
                        <option value="">-- All Roles --</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select name="statusFilter" asp-for="StatusFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">-- All Statuses --</option>
                        <option value="Active">Active</option>
                        <option value="Locked">Locked</option>
                        <option value="Unconfirmed">Email Unconfirmed</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <div class="d-grid">
                        <a asp-page="./Index" class="btn btn-outline-secondary">Reset</a>
                    </div>
                </div>
            </form>
        </div>

        <div class="card-body">
            @if (Model.Users.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <a asp-page="./Index" asp-route-sortOrder="@Model.EmailSort"
                                       asp-route-currentFilter="@Model.CurrentFilter"
                                       asp-route-roleFilter="@Model.RoleFilter"
                                       asp-route-statusFilter="@Model.StatusFilter">
                                        @Html.DisplayNameFor(model => model.Users[0].Email)
                                    </a>
                                </th>
                                <th>
                                    <a asp-page="./Index" asp-route-sortOrder="@Model.UsernameSort"
                                       asp-route-currentFilter="@Model.CurrentFilter"
                                       asp-route-roleFilter="@Model.RoleFilter"
                                       asp-route-statusFilter="@Model.StatusFilter">
                                        @Html.DisplayNameFor(model => model.Users[0].UserName)
                                    </a>
                                </th>
                                <th>Roles</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                                <tr>
                                    <td>@user.Email</td>
                                    <td>@user.UserName</td>
                                    <td>
                                        @if (user.Roles.Any())
                                        {
                                            foreach (var role in user.Roles)
                                            {
                                                <span class="badge bg-primary me-1">@role</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-muted">No roles</span>
                                        }
                                    </td>
                                    <td>
                                        @if (user.IsLockedOut)
                                        {
                                            <span class="badge bg-danger">Locked</span>
                                        }
                                        else if (!user.EmailConfirmed)
                                        {
                                            <span class="badge bg-warning text-dark">Unconfirmed</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-page="./Details" asp-route-id="@user.Id" class="btn btn-sm btn-primary">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-page="./Edit" asp-route-id="@user.Id" class="btn btn-sm btn-secondary">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" 
                                                    data-bs-target="#deleteModal" data-id="@user.Id" data-email="@user.Email">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            @{
                                var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
                                var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
                            }
                            <li class="page-item @prevDisabled">
                                <a asp-page="./Index"
                                   asp-route-pageIndex="1"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   class="page-link">
                                    First
                                </a>
                            </li>
                            <li class="page-item @prevDisabled">
                                <a asp-page="./Index"
                                   asp-route-pageIndex="@(Model.Users.PageIndex - 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   class="page-link">
                                    Previous
                                </a>
                            </li>
                            @for (var i = 1; i <= Model.Users.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Users.PageIndex ? "active" : "")">
                                    <a asp-page="./Index"
                                       asp-route-pageIndex="@i"
                                       asp-route-currentFilter="@Model.CurrentFilter"
                                       asp-route-roleFilter="@Model.RoleFilter"
                                       asp-route-statusFilter="@Model.StatusFilter"
                                       asp-route-sortOrder="@Model.CurrentSort"
                                       class="page-link">
                                        @i
                                    </a>
                                </li>
                            }
                            <li class="page-item @nextDisabled">
                                <a asp-page="./Index"
                                   asp-route-pageIndex="@(Model.Users.PageIndex + 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   class="page-link">
                                    Next
                                </a>
                            </li>
                            <li class="page-item @nextDisabled">
                                <a asp-page="./Index"
                                   asp-route-pageIndex="@Model.Users.TotalPages"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   class="page-link">
                                    Last
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <p class="mb-0">No users found matching your search criteria.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong id="deleteUserEmail"></strong>?</p>
                <p class="text-danger">This action cannot be undone. All associated data will be permanently deleted.</p>
            </div>
            <div class="modal-footer">
                <form method="post">
                    <input type="hidden" id="deleteUserId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set user data in delete modal
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var id = button.getAttribute('data-id');
                    var email = button.getAttribute('data-email');
                    
                    document.getElementById('deleteUserId').value = id;
                    document.getElementById('deleteUserEmail').textContent = email;
                });
            }
        });
    </script>
}