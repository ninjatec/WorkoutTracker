@page
@model WorkoutTrackerWeb.Areas.Admin.Pages.Users.DetailsModel
@{
    ViewData["Title"] = "User Details";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>User Details</h1>
        <div>
            <a asp-page="./Edit" asp-route-id="@Model.User.Id" class="btn btn-primary">
                <i class="bi bi-pencil"></i> Edit User
            </a>
            <a asp-page="./Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        var statusClass = Model.IsSuccess ? "alert-success" : "alert-danger";
        <div class="alert @statusClass alert-dismissible fade show mb-4" role="alert">
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Basic Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.User.Email)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.User.Email)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.User.UserName)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.User.UserName)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.User.PhoneNumber)</dt>
                        <dd class="col-sm-9">
                            @if (!string.IsNullOrEmpty(Model.User.PhoneNumber))
                            {
                                @Html.DisplayFor(model => model.User.PhoneNumber)
                            }
                            else
                            {
                                <span class="text-muted">Not provided</span>
                            }
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.User.EmailConfirmed)</dt>
                        <dd class="col-sm-9">
                            @if (Model.User.EmailConfirmed)
                            {
                                <span class="badge bg-success"><i class="bi bi-check-circle"></i> Confirmed</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark"><i class="bi bi-exclamation-triangle"></i> Not Confirmed</span>
                                <form method="post" class="d-inline ms-2" asp-page-handler="ConfirmEmail">
                                    <input type="hidden" name="id" value="@Model.User.Id" />
                                    <button type="submit" class="btn btn-sm btn-primary">Confirm Now</button>
                                </form>
                            }
                        </dd>
                    </dl>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Roles</h5>
                </div>
                <div class="card-body">
                    @if (Model.User.Roles != null && Model.User.Roles.Any())
                    {
                        <div class="mb-3">
                            @foreach (var role in Model.User.Roles)
                            {
                                <span class="badge bg-primary me-2 mb-2 p-2">
                                    @role
                                    <button type="button" class="btn-close btn-close-white ms-1" 
                                            data-bs-toggle="modal" data-bs-target="#removeRoleModal"
                                            data-role="@role"></button>
                                </span>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-3">This user is not assigned any roles.</p>
                    }

                    @if (Model.AvailableRoles != null && Model.AvailableRoles.Any())
                    {
                        <form method="post" asp-page-handler="AddToRole" class="row g-2">
                            <input type="hidden" name="id" value="@Model.User.Id" />
                            <div class="col-md-8">
                                <select name="role" class="form-select" required>
                                    <option value="">-- Select Role --</option>
                                    @foreach (var role in Model.AvailableRoles)
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-primary w-100">Add Role</button>
                            </div>
                        </form>
                    }
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Security Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.User.TwoFactorEnabled)</dt>
                        <dd class="col-sm-8">
                            @if (Model.User.TwoFactorEnabled)
                            {
                                <span class="badge bg-success"><i class="bi bi-shield-check"></i> Enabled</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary"><i class="bi bi-shield-x"></i> Disabled</span>
                            }
                        </dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.User.LockoutEnabled)</dt>
                        <dd class="col-sm-8">
                            @if (Model.User.LockoutEnabled)
                            {
                                <span class="badge bg-danger"><i class="bi bi-lock"></i> Enabled</span>
                                @if (Model.User.LockoutEnd.HasValue && Model.User.LockoutEnd.Value > DateTimeOffset.UtcNow)
                                {
                                    <span class="ms-2">
                                        Until @Model.User.LockoutEnd.Value.LocalDateTime.ToString("dd/MM/yyyy HH:mm")
                                    </span>
                                    <form method="post" asp-page-handler="UnlockUser" class="d-inline ms-2">
                                        <input type="hidden" name="id" value="@Model.User.Id" />
                                        <button type="submit" class="btn btn-sm btn-warning">Unlock Now</button>
                                    </form>
                                }
                            }
                            else
                            {
                                <span class="badge bg-success"><i class="bi bi-unlock"></i> Disabled</span>
                            }
                        </dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.User.AccessFailedCount)</dt>
                        <dd class="col-sm-8">@Model.User.AccessFailedCount</dd>

                        <dt class="col-sm-4">Password</dt>
                        <dd class="col-sm-8">
                            <a asp-page="./ResetPassword" asp-route-id="@Model.User.Id" class="btn btn-sm btn-warning">
                                <i class="bi bi-key"></i> Reset Password
                            </a>
                        </dd>
                    </dl>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Login History</h5>
                    <span class="badge bg-secondary">Last 20 logins</span>
                </div>
                <div class="card-body">
                    @if (Model.LoginHistory != null && Model.LoginHistory.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Time</th>
                                        <th>Status</th>
                                        <th>IP Address</th>
                                        <th>Device</th>
                                        <th>Platform</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var login in Model.LoginHistory)
                                    {
                                        <tr>
                                            <td>@login.FormattedLoginTime</td>
                                            <td>@Html.Raw(login.StatusBadge)</td>
                                            <td>@login.IpAddress</td>
                                            <td>@login.DeviceType</td>
                                            <td>@login.Platform</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No login history available for this user.</p>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-page="./Edit" asp-route-id="@Model.User.Id" class="btn btn-primary">
                            <i class="bi bi-pencil"></i> Edit User
                        </a>
                        <a asp-page="./ResetPassword" asp-route-id="@Model.User.Id" class="btn btn-warning">
                            <i class="bi bi-key"></i> Reset Password
                        </a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteUserModal">
                            <i class="bi bi-trash"></i> Delete User
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">User Activity</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-5">Sessions</dt>
                        <dd class="col-sm-7">@Model.SessionCount</dd>

                        <dt class="col-sm-5">Last Active</dt>
                        <dd class="col-sm-7">
                            @(Model.LastActive?.ToString("dd/MM/yyyy HH:mm") ?? "Never")
                        </dd>

                        <dt class="col-sm-5">Created Date</dt>
                        <dd class="col-sm-7">
                            @Model.User.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                        </dd>
                        
                        <dt class="col-sm-5">Last Modified</dt>
                        <dd class="col-sm-7">
                            @Model.User.LastModifiedDate.ToString("dd/MM/yyyy HH:mm")
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Remove Role Modal -->
<div class="modal fade" id="removeRoleModal" tabindex="-1" aria-labelledby="removeRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeRoleModalLabel">Remove Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="RemoveFromRole">
                <div class="modal-body">
                    <input type="hidden" name="id" value="@Model.User.Id" />
                    <input type="hidden" id="roleToRemove" name="role" />
                    <p>Are you sure you want to remove the role <strong id="roleNameToRemove"></strong> from this user?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Remove Role</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteUserModalLabel">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong>@Model.User.Email</strong>?</p>
                <p class="text-danger">This action cannot be undone. All associated data will be permanently deleted.</p>
            </div>
            <div class="modal-footer">
                <form method="post" asp-page-handler="DeleteUser">
                    <input type="hidden" name="id" value="@Model.User.Id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete User</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Pass role data to the remove role modal
        document.addEventListener('DOMContentLoaded', function() {
            var removeRoleModal = document.getElementById('removeRoleModal');
            if (removeRoleModal) {
                removeRoleModal.addEventListener('show.bs.modal', function(event) {
                    var button = event.relatedTarget;
                    var role = button.getAttribute('data-role');
                    document.getElementById('roleToRemove').value = role;
                    document.getElementById('roleNameToRemove').textContent = role;
                });
            }
        });
    </script>
}